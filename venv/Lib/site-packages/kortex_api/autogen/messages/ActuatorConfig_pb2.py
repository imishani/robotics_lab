# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ActuatorConfig.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import Common_pb2 as Common__pb2

from .Common_pb2 import *

DESCRIPTOR = _descriptor.FileDescriptor(
  name='ActuatorConfig.proto',
  package='Kinova.Api.ActuatorConfig',
  syntax='proto3',
  serialized_pb=_b('\n\x14\x41\x63tuatorConfig.proto\x12\x19Kinova.Api.ActuatorConfig\x1a\x0c\x43ommon.proto\" \n\x0c\x41xisPosition\x12\x10\n\x08position\x18\x01 \x01(\x02\"?\n\x0b\x41xisOffsets\x12\x17\n\x0f\x61\x62solute_offset\x18\x01 \x01(\x02\x12\x17\n\x0frelative_offset\x18\x02 \x01(\x02\"]\n\x11TorqueCalibration\x12\x13\n\x0bglobal_gain\x18\x01 \x01(\x02\x12\x15\n\rglobal_offset\x18\x02 \x01(\x02\x12\x0c\n\x04gain\x18\x03 \x03(\x02\x12\x0e\n\x06offset\x18\x04 \x03(\x02\"%\n\x0cTorqueOffset\x12\x15\n\rtorque_offset\x18\x01 \x01(\x02\"V\n\x16\x43ontrolModeInformation\x12<\n\x0c\x63ontrol_mode\x18\x01 \x01(\x0e\x32&.Kinova.Api.ActuatorConfig.ControlMode\"#\n\x0b\x43ontrolLoop\x12\x14\n\x0c\x63ontrol_loop\x18\x01 \x01(\x07\"X\n\rLoopSelection\x12G\n\x0eloop_selection\x18\x01 \x01(\x0e\x32/.Kinova.Api.ActuatorConfig.ControlLoopSelection\"K\n\x15VectorDriveParameters\x12\x0b\n\x03kpq\x18\x01 \x01(\x02\x12\x0b\n\x03kiq\x18\x02 \x01(\x02\x12\x0b\n\x03kpd\x18\x03 \x01(\x02\x12\x0b\n\x03kid\x18\x04 \x01(\x02\"J\n\x1b\x45ncoderDerivativeParameters\x12\x18\n\x10max_window_width\x18\x01 \x01(\r\x12\x11\n\tmin_angle\x18\x02 \x01(\x02\"\xc8\x01\n\x15\x43ontrolLoopParameters\x12G\n\x0eloop_selection\x18\x01 \x01(\x0e\x32/.Kinova.Api.ActuatorConfig.ControlLoopSelection\x12\x18\n\x10\x65rror_saturation\x18\x02 \x01(\x02\x12\x19\n\x11output_saturation\x18\x03 \x01(\x02\x12\x0b\n\x03kAz\x18\x04 \x03(\x02\x12\x0b\n\x03kBz\x18\x05 \x03(\x02\x12\x17\n\x0f\x65rror_dead_band\x18\x06 \x01(\x02\"\xaf\x01\n\x11\x46requencyResponse\x12G\n\x0eloop_selection\x18\x01 \x01(\x0e\x32/.Kinova.Api.ActuatorConfig.ControlLoopSelection\x12\x15\n\rmin_frequency\x18\x02 \x01(\x02\x12\x15\n\rmax_frequency\x18\x03 \x01(\x02\x12\x11\n\tamplitude\x18\x04 \x01(\x02\x12\x10\n\x08\x64uration\x18\x05 \x01(\x02\"\x90\x01\n\x0cStepResponse\x12G\n\x0eloop_selection\x18\x01 \x01(\x0e\x32/.Kinova.Api.ActuatorConfig.ControlLoopSelection\x12\x11\n\tamplitude\x18\x02 \x01(\x02\x12\x12\n\nstep_delay\x18\x03 \x01(\x02\x12\x10\n\x08\x64uration\x18\x04 \x01(\x02\"\x8c\x01\n\x0cRampResponse\x12G\n\x0eloop_selection\x18\x01 \x01(\x0e\x32/.Kinova.Api.ActuatorConfig.ControlLoopSelection\x12\r\n\x05slope\x18\x02 \x01(\x02\x12\x12\n\nramp_delay\x18\x03 \x01(\x02\x12\x10\n\x08\x64uration\x18\x04 \x01(\x02\"R\n\x13\x43ustomDataSelection\x12;\n\x07\x63hannel\x18\x01 \x03(\x0e\x32*.Kinova.Api.ActuatorConfig.CustomDataIndex\"V\n\x16\x43ommandModeInformation\x12<\n\x0c\x63ommand_mode\x18\x01 \x01(\x0e\x32&.Kinova.Api.ActuatorConfig.CommandMode\"\x1b\n\x08Servoing\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\"K\n\x0fPositionCommand\x12\x10\n\x08position\x18\x01 \x01(\x02\x12\x10\n\x08velocity\x18\x02 \x01(\x02\x12\x14\n\x0c\x61\x63\x63\x65leration\x18\x03 \x01(\x02\"x\n!CoggingFeedforwardModeInformation\x12S\n\x18\x63ogging_feedforward_mode\x18\x01 \x01(\x0e\x32\x31.Kinova.Api.ActuatorConfig.CoggingFeedforwardMode*5\n\x0eServiceVersion\x12\x0e\n\nRESERVED_0\x10\x00\x12\x13\n\x0f\x43URRENT_VERSION\x10\x01*7\n\x0fSafetyLimitType\x12\x11\n\rMAXIMAL_LIMIT\x10\x00\x12\x11\n\rMINIMAL_LIMIT\x10\x01*r\n\x0b\x43ontrolMode\x12\x08\n\x04NONE\x10\x00\x12\x0c\n\x08POSITION\x10\x01\x12\x0c\n\x08VELOCITY\x10\x02\x12\n\n\x06TORQUE\x10\x03\x12\x0b\n\x07\x43URRENT\x10\x04\x12\n\n\x06\x43USTOM\x10\x05\x12\x18\n\x14TORQUE_HIGH_VELOCITY\x10\x06*\xb5\x01\n\x0b\x43ommandMode\x12\n\n\x06\x43YCLIC\x10\x00\x12\x16\n\x12\x41SYNC_CYCLIC_FLAGS\x10\x01\x12\t\n\x05\x41SYNC\x10\x02\x12%\n!CYCLIC_JITTERCOMPENSATED_POSITION\x10\x03\x12%\n!CYCLIC_JITTERCOMPENSATED_VELOCITY\x10\x04\x12)\n%CYCLIC_JITTERCOMPENSATED_ACCELERATION\x10\x05*\xb9\x01\n\x14\x43ontrolLoopSelection\x12\x0c\n\x08RESERVED\x10\x00\x12\x12\n\x0eJOINT_POSITION\x10\x01\x12\x12\n\x0eMOTOR_POSITION\x10\x02\x12\x12\n\x0eJOINT_VELOCITY\x10\x04\x12\x12\n\x0eMOTOR_VELOCITY\x10\x08\x12\x10\n\x0cJOINT_TORQUE\x10\x10\x12\x11\n\rMOTOR_CURRENT\x10 \x12\x1e\n\x1aJOINT_TORQUE_HIGH_VELOCITY\x10@*c\n\x16\x43oggingFeedforwardMode\x12\x13\n\x0f\x46\x45\x45\x44\x46ORWARD_OFF\x10\x00\x12\x18\n\x14\x46\x45\x45\x44\x46ORWARD_ADAPTIVE\x10\x01\x12\x1a\n\x16\x46\x45\x45\x44\x46ORWARD_CALIBRATED\x10\x02*\xc1\x06\n\x15SafetyIdentifierBankA\x12\x31\n-UNSPECIFIED_ACTUATOR_SAFETY_IDENTIFIER_BANK_A\x10\x00\x12\x13\n\x0f\x46OLLOWING_ERROR\x10\x01\x12\x14\n\x10MAXIMUM_VELOCITY\x10\x02\x12\x14\n\x10JOINT_LIMIT_HIGH\x10\x04\x12\x13\n\x0fJOINT_LIMIT_LOW\x10\x08\x12\x19\n\x15STRAIN_GAUGE_MISMATCH\x10\x10\x12\x12\n\x0eMAXIMUM_TORQUE\x10 \x12 \n\x1cUNRELIABLE_ABSOLUTE_POSITION\x10@\x12\x16\n\x11MAGNETIC_POSITION\x10\x80\x01\x12\x12\n\rHALL_POSITION\x10\x80\x02\x12\x12\n\rHALL_SEQUENCE\x10\x80\x04\x12 \n\x1bINPUT_ENCODER_HALL_MISMATCH\x10\x80\x08\x12!\n\x1cINPUT_ENCODER_INDEX_MISMATCH\x10\x80\x10\x12$\n\x1fINPUT_ENCODER_MAGNETIC_MISMATCH\x10\x80 \x12\x1a\n\x15MAXIMUM_MOTOR_CURRENT\x10\x80@\x12\x1c\n\x16MOTOR_CURRENT_MISMATCH\x10\x80\x80\x01\x12\x15\n\x0fMAXIMUM_VOLTAGE\x10\x80\x80\x02\x12\x15\n\x0fMINIMUM_VOLTAGE\x10\x80\x80\x04\x12\x1f\n\x19MAXIMUM_MOTOR_TEMPERATURE\x10\x80\x80\x08\x12\x1e\n\x18MAXIMUM_CORE_TEMPERATURE\x10\x80\x80\x10\x12#\n\x1dNON_VOLATILE_MEMORY_CORRUPTED\x10\x80\x80 \x12\x18\n\x12MOTOR_DRIVER_FAULT\x10\x80\x80@\x12\x1e\n\x17\x45MERGENCY_LINE_ASSERTED\x10\x80\x80\x80\x01\x12\x1e\n\x17\x43OMMUNICATION_TICK_LOST\x10\x80\x80\x80\x02\x12\x19\n\x12WATCHDOG_TRIGGERED\x10\x80\x80\x80\x04\x12#\n\x1cUNRELIABLE_CAPACITIVE_SENSOR\x10\x80\x80\x80\x08\x12\x1c\n\x15UNEXPECTED_GEAR_RATIO\x10\x80\x80\x80\x10\x12\x1d\n\x16HALL_MAGNETIC_MISMATCH\x10\x80\x80\x80 *\xcc\x17\n\x0f\x43ustomDataIndex\x12\x1b\n\x17NO_CUSTOM_DATA_SELECTED\x10\x00\x12\x14\n\x10UINT32_TEST_RAMP\x10\x01\x12\x1c\n\x18UINT32_MOTOR_ENCODER_RAW\x10\x02\x12\x1c\n\x18UINT32_JOINT_ENCODER_RAW\x10\x03\x12\x1d\n\x19\x46LOAT_TEMPERATURE_PHASE_0\x10\x04\x12\x1d\n\x19\x46LOAT_TEMPERATURE_PHASE_1\x10\x05\x12\x1d\n\x19\x46LOAT_TEMPERATURE_PHASE_2\x10\x06\x12\x1d\n\x19INT32_TORQUE_SENSOR_RAW_0\x10\x07\x12\x1d\n\x19INT32_TORQUE_SENSOR_RAW_1\x10\x08\x12\x1d\n\x19INT32_TORQUE_SENSOR_RAW_2\x10\t\x12\x1d\n\x19INT32_TORQUE_SENSOR_RAW_3\x10\n\x12\x19\n\x15\x46LOAT_TORQUE_SENSOR_0\x10\x0b\x12\x19\n\x15\x46LOAT_TORQUE_SENSOR_1\x10\x0c\x12\x19\n\x15\x46LOAT_TORQUE_SENSOR_2\x10\r\x12\x19\n\x15\x46LOAT_TORQUE_SENSOR_3\x10\x0e\x12\x32\n.UINT32_MOTOR_ENCODER_RAW_LATCH_ON_INDEX_RISING\x10\x0f\x12\x32\n.UINT32_JOINT_ENCODER_RAW_LATCH_ON_INDEX_RISING\x10\x10\x12\'\n#UINT32_ABSOLUTE_POSITION_SENSOR_RAW\x10\x11\x12\"\n\x1e\x46LOAT_ABSOLUTE_POSITION_SENSOR\x10\x12\x12*\n&FLOAT_CONTROL_POSITION_JOINT_REQUESTED\x10\x13\x12\x14\n\x10UINT32_JIG_FLAGS\x10\x14\x12\x1d\n\x19UINT32_TICK_MOTOR_CONTROL\x10\x15\x12\x1d\n\x19UINT32_TICK_JOINT_CONTROL\x10\x16\x12#\n\x1fUINT32_INDEX_TICK_MOTOR_CONTROL\x10\x17\x12#\n\x1fUINT32_INDEX_TICK_JOINT_CONTROL\x10\x18\x12\x18\n\x14\x46LOAT_ACCELERATION_X\x10\x19\x12\x18\n\x14\x46LOAT_ACCELERATION_Y\x10\x1a\x12\x18\n\x14\x46LOAT_ACCELERATION_Z\x10\x1b\x12\x18\n\x14\x46LOAT_ANGULAR_RATE_X\x10\x1c\x12\x18\n\x14\x46LOAT_ANGULAR_RATE_Y\x10\x1d\x12\x18\n\x14\x46LOAT_ANGULAR_RATE_Z\x10\x1e\x12\x1c\n\x18\x46LOAT_POSITION_MOTOR_CMD\x10\x1f\x12\x1c\n\x18\x46LOAT_VELOCITY_MOTOR_CMD\x10 \x12\x18\n\x14\x46LOAT_POSITION_MOTOR\x10!\x12\x18\n\x14\x46LOAT_VELOCITY_MOTOR\x10\"\x12 \n\x1cUINT32_COMMUNICATIONS_JITTER\x10#\x12\x18\n\x14\x46LOAT_TORQUE_AVERAGE\x10$\x12\x17\n\x13\x46LOAT_CURRENT_MOTOR\x10%\x12\x19\n\x15\x46LOAT_VOLTAGE_DIGITAL\x10&\x12#\n\x1f\x46LOAT_TEMPERATURE_MOTOR_CELSIUS\x10\'\x12\"\n\x1e\x46LOAT_TEMPERATURE_CORE_CELSIUS\x10(\x12\x12\n\x0eUINT32_FAULT_A\x10)\x12\x12\n\x0eUINT32_FAULT_B\x10*\x12\x14\n\x10UINT32_WARNING_A\x10+\x12\x14\n\x10UINT32_WARNING_B\x10,\x12\x1d\n\x19\x46LOAT_POSITION_FROM_HALLS\x10-\x12\x19\n\x15\x46LOAT_PHASE_CURRENT_0\x10.\x12\x19\n\x15\x46LOAT_PHASE_CURRENT_1\x10/\x12\x19\n\x15\x46LOAT_PHASE_CURRENT_2\x10\x30\x12\x15\n\x11\x46LOAT_PHASE_PWM_0\x10\x31\x12\x15\n\x11\x46LOAT_PHASE_PWM_1\x10\x32\x12\x15\n\x11\x46LOAT_PHASE_PWM_2\x10\x33\x12 \n\x1c\x46LOAT_MOTOR_ELECTRICAL_ANGLE\x10\x34\x12\x1b\n\x17\x46LOAT_CURRENT_MOTOR_CMD\x10\x35\x12\x1a\n\x16\x46LOAT_TORQUE_JOINT_CMD\x10\x36\x12\x1c\n\x18\x46LOAT_POSITION_UNWRAPPED\x10\x37\x12\x18\n\x14UINT32_HALL_SENSOR_0\x10\x38\x12\x18\n\x14UINT32_HALL_SENSOR_1\x10\x39\x12\x18\n\x14UINT32_HALL_SENSOR_2\x10:\x12\x1e\n\x1aINT32_HALL_SENSOR_SCALED_0\x10;\x12\x1e\n\x1aINT32_HALL_SENSOR_SCALED_1\x10<\x12\x1e\n\x1aINT32_HALL_SENSOR_SCALED_2\x10=\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_A_0\x10>\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_A_1\x10?\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_A_2\x10@\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_A_3\x10\x41\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_A_4\x10\x42\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_A_5\x10\x43\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_A_6\x10\x44\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_A_7\x10\x45\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_A_8\x10\x46\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_A_9\x10G\x12\"\n\x1e\x46LOAT_COGGING_COEFFICIENT_A_10\x10H\x12\"\n\x1e\x46LOAT_COGGING_COEFFICIENT_A_11\x10I\x12\"\n\x1e\x46LOAT_COGGING_COEFFICIENT_A_12\x10J\x12\"\n\x1e\x46LOAT_COGGING_COEFFICIENT_A_13\x10K\x12\"\n\x1e\x46LOAT_COGGING_COEFFICIENT_A_14\x10L\x12\"\n\x1e\x46LOAT_COGGING_COEFFICIENT_A_15\x10M\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_B_0\x10N\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_B_1\x10O\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_B_2\x10P\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_B_3\x10Q\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_B_4\x10R\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_B_5\x10S\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_B_6\x10T\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_B_7\x10U\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_B_8\x10V\x12!\n\x1d\x46LOAT_COGGING_COEFFICIENT_B_9\x10W\x12\"\n\x1e\x46LOAT_COGGING_COEFFICIENT_B_10\x10X\x12\"\n\x1e\x46LOAT_COGGING_COEFFICIENT_B_11\x10Y\x12\"\n\x1e\x46LOAT_COGGING_COEFFICIENT_B_12\x10Z\x12\"\n\x1e\x46LOAT_COGGING_COEFFICIENT_B_13\x10[\x12\"\n\x1e\x46LOAT_COGGING_COEFFICIENT_B_14\x10\\\x12\"\n\x1e\x46LOAT_COGGING_COEFFICIENT_B_15\x10]\x12%\n!FLOAT_CURRENT_COGGING_FEEDFORWARD\x10^2\xc7\x17\n\x0e\x41\x63tuatorConfig\x12R\n\x0eGetAxisOffsets\x12\x18.Kinova.Api.Common.Empty\x1a&.Kinova.Api.ActuatorConfig.AxisOffsets\x12S\n\x0eSetAxisOffsets\x12\'.Kinova.Api.ActuatorConfig.AxisPosition\x1a\x18.Kinova.Api.Common.Empty\x12_\n\x15ReadTorqueCalibration\x12\x18.Kinova.Api.Common.Empty\x1a,.Kinova.Api.ActuatorConfig.TorqueCalibration\x12`\n\x16WriteTorqueCalibration\x12,.Kinova.Api.ActuatorConfig.TorqueCalibration\x1a\x18.Kinova.Api.Common.Empty\x12T\n\x0fSetTorqueOffset\x12\'.Kinova.Api.ActuatorConfig.TorqueOffset\x1a\x18.Kinova.Api.Common.Empty\x12]\n\x0eGetControlMode\x12\x18.Kinova.Api.Common.Empty\x1a\x31.Kinova.Api.ActuatorConfig.ControlModeInformation\x12]\n\x0eSetControlMode\x12\x31.Kinova.Api.ActuatorConfig.ControlModeInformation\x1a\x18.Kinova.Api.Common.Empty\x12[\n\x17GetActivatedControlLoop\x12\x18.Kinova.Api.Common.Empty\x1a&.Kinova.Api.ActuatorConfig.ControlLoop\x12[\n\x17SetActivatedControlLoop\x12&.Kinova.Api.ActuatorConfig.ControlLoop\x1a\x18.Kinova.Api.Common.Empty\x12\x66\n\x18GetVectorDriveParameters\x12\x18.Kinova.Api.Common.Empty\x1a\x30.Kinova.Api.ActuatorConfig.VectorDriveParameters\x12\x66\n\x18SetVectorDriveParameters\x12\x30.Kinova.Api.ActuatorConfig.VectorDriveParameters\x1a\x18.Kinova.Api.Common.Empty\x12r\n\x1eGetEncoderDerivativeParameters\x12\x18.Kinova.Api.Common.Empty\x1a\x36.Kinova.Api.ActuatorConfig.EncoderDerivativeParameters\x12r\n\x1eSetEncoderDerivativeParameters\x12\x36.Kinova.Api.ActuatorConfig.EncoderDerivativeParameters\x1a\x18.Kinova.Api.Common.Empty\x12v\n\x18GetControlLoopParameters\x12(.Kinova.Api.ActuatorConfig.LoopSelection\x1a\x30.Kinova.Api.ActuatorConfig.ControlLoopParameters\x12\x66\n\x18SetControlLoopParameters\x12\x30.Kinova.Api.ActuatorConfig.ControlLoopParameters\x1a\x18.Kinova.Api.Common.Empty\x12`\n\x16StartFrequencyResponse\x12,.Kinova.Api.ActuatorConfig.FrequencyResponse\x1a\x18.Kinova.Api.Common.Empty\x12K\n\x15StopFrequencyResponse\x12\x18.Kinova.Api.Common.Empty\x1a\x18.Kinova.Api.Common.Empty\x12V\n\x11StartStepResponse\x12\'.Kinova.Api.ActuatorConfig.StepResponse\x1a\x18.Kinova.Api.Common.Empty\x12\x46\n\x10StopStepResponse\x12\x18.Kinova.Api.Common.Empty\x1a\x18.Kinova.Api.Common.Empty\x12V\n\x11StartRampResponse\x12\'.Kinova.Api.ActuatorConfig.RampResponse\x1a\x18.Kinova.Api.Common.Empty\x12\x46\n\x10StopRampResponse\x12\x18.Kinova.Api.Common.Empty\x1a\x18.Kinova.Api.Common.Empty\x12\\\n\x10SelectCustomData\x12..Kinova.Api.ActuatorConfig.CustomDataSelection\x1a\x18.Kinova.Api.Common.Empty\x12\x61\n\x15GetSelectedCustomData\x12\x18.Kinova.Api.Common.Empty\x1a..Kinova.Api.ActuatorConfig.CustomDataSelection\x12]\n\x0eSetCommandMode\x12\x31.Kinova.Api.ActuatorConfig.CommandModeInformation\x1a\x18.Kinova.Api.Common.Empty\x12\x41\n\x0b\x43learFaults\x12\x18.Kinova.Api.Common.Empty\x1a\x18.Kinova.Api.Common.Empty\x12L\n\x0bSetServoing\x12#.Kinova.Api.ActuatorConfig.Servoing\x1a\x18.Kinova.Api.Common.Empty\x12V\n\x0eMoveToPosition\x12*.Kinova.Api.ActuatorConfig.PositionCommand\x1a\x18.Kinova.Api.Common.Empty\x12]\n\x0eGetCommandMode\x12\x18.Kinova.Api.Common.Empty\x1a\x31.Kinova.Api.ActuatorConfig.CommandModeInformation\x12L\n\x0bGetServoing\x12\x18.Kinova.Api.Common.Empty\x1a#.Kinova.Api.ActuatorConfig.Servoing\x12T\n\x0fGetTorqueOffset\x12\x18.Kinova.Api.Common.Empty\x1a\'.Kinova.Api.ActuatorConfig.TorqueOffset\x12s\n\x19SetCoggingFeedforwardMode\x12<.Kinova.Api.ActuatorConfig.CoggingFeedforwardModeInformation\x1a\x18.Kinova.Api.Common.Empty\x12s\n\x19GetCoggingFeedforwardMode\x12\x18.Kinova.Api.Common.Empty\x1a<.Kinova.Api.ActuatorConfig.CoggingFeedforwardModeInformationP\x00\x62\x06proto3')
  ,
  dependencies=[Common__pb2.DESCRIPTOR,],
  public_dependencies=[Common__pb2.DESCRIPTOR,])

_SERVICEVERSION = _descriptor.EnumDescriptor(
  name='ServiceVersion',
  full_name='Kinova.Api.ActuatorConfig.ServiceVersion',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RESERVED_0', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CURRENT_VERSION', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1737,
  serialized_end=1790,
)
_sym_db.RegisterEnumDescriptor(_SERVICEVERSION)

ServiceVersion = enum_type_wrapper.EnumTypeWrapper(_SERVICEVERSION)
_SAFETYLIMITTYPE = _descriptor.EnumDescriptor(
  name='SafetyLimitType',
  full_name='Kinova.Api.ActuatorConfig.SafetyLimitType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='MAXIMAL_LIMIT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MINIMAL_LIMIT', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1792,
  serialized_end=1847,
)
_sym_db.RegisterEnumDescriptor(_SAFETYLIMITTYPE)

SafetyLimitType = enum_type_wrapper.EnumTypeWrapper(_SAFETYLIMITTYPE)
_CONTROLMODE = _descriptor.EnumDescriptor(
  name='ControlMode',
  full_name='Kinova.Api.ActuatorConfig.ControlMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POSITION', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VELOCITY', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TORQUE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CURRENT', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CUSTOM', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TORQUE_HIGH_VELOCITY', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1849,
  serialized_end=1963,
)
_sym_db.RegisterEnumDescriptor(_CONTROLMODE)

ControlMode = enum_type_wrapper.EnumTypeWrapper(_CONTROLMODE)
_COMMANDMODE = _descriptor.EnumDescriptor(
  name='CommandMode',
  full_name='Kinova.Api.ActuatorConfig.CommandMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CYCLIC', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASYNC_CYCLIC_FLAGS', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASYNC', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CYCLIC_JITTERCOMPENSATED_POSITION', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CYCLIC_JITTERCOMPENSATED_VELOCITY', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CYCLIC_JITTERCOMPENSATED_ACCELERATION', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1966,
  serialized_end=2147,
)
_sym_db.RegisterEnumDescriptor(_COMMANDMODE)

CommandMode = enum_type_wrapper.EnumTypeWrapper(_COMMANDMODE)
_CONTROLLOOPSELECTION = _descriptor.EnumDescriptor(
  name='ControlLoopSelection',
  full_name='Kinova.Api.ActuatorConfig.ControlLoopSelection',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RESERVED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JOINT_POSITION', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MOTOR_POSITION', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JOINT_VELOCITY', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MOTOR_VELOCITY', index=4, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JOINT_TORQUE', index=5, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MOTOR_CURRENT', index=6, number=32,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JOINT_TORQUE_HIGH_VELOCITY', index=7, number=64,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2150,
  serialized_end=2335,
)
_sym_db.RegisterEnumDescriptor(_CONTROLLOOPSELECTION)

ControlLoopSelection = enum_type_wrapper.EnumTypeWrapper(_CONTROLLOOPSELECTION)
_COGGINGFEEDFORWARDMODE = _descriptor.EnumDescriptor(
  name='CoggingFeedforwardMode',
  full_name='Kinova.Api.ActuatorConfig.CoggingFeedforwardMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FEEDFORWARD_OFF', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FEEDFORWARD_ADAPTIVE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FEEDFORWARD_CALIBRATED', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2337,
  serialized_end=2436,
)
_sym_db.RegisterEnumDescriptor(_COGGINGFEEDFORWARDMODE)

CoggingFeedforwardMode = enum_type_wrapper.EnumTypeWrapper(_COGGINGFEEDFORWARDMODE)
_SAFETYIDENTIFIERBANKA = _descriptor.EnumDescriptor(
  name='SafetyIdentifierBankA',
  full_name='Kinova.Api.ActuatorConfig.SafetyIdentifierBankA',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSPECIFIED_ACTUATOR_SAFETY_IDENTIFIER_BANK_A', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FOLLOWING_ERROR', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAXIMUM_VELOCITY', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JOINT_LIMIT_HIGH', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JOINT_LIMIT_LOW', index=4, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRAIN_GAUGE_MISMATCH', index=5, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAXIMUM_TORQUE', index=6, number=32,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNRELIABLE_ABSOLUTE_POSITION', index=7, number=64,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAGNETIC_POSITION', index=8, number=128,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HALL_POSITION', index=9, number=256,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HALL_SEQUENCE', index=10, number=512,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT_ENCODER_HALL_MISMATCH', index=11, number=1024,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT_ENCODER_INDEX_MISMATCH', index=12, number=2048,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT_ENCODER_MAGNETIC_MISMATCH', index=13, number=4096,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAXIMUM_MOTOR_CURRENT', index=14, number=8192,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MOTOR_CURRENT_MISMATCH', index=15, number=16384,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAXIMUM_VOLTAGE', index=16, number=32768,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MINIMUM_VOLTAGE', index=17, number=65536,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAXIMUM_MOTOR_TEMPERATURE', index=18, number=131072,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAXIMUM_CORE_TEMPERATURE', index=19, number=262144,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NON_VOLATILE_MEMORY_CORRUPTED', index=20, number=524288,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MOTOR_DRIVER_FAULT', index=21, number=1048576,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EMERGENCY_LINE_ASSERTED', index=22, number=2097152,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMMUNICATION_TICK_LOST', index=23, number=4194304,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WATCHDOG_TRIGGERED', index=24, number=8388608,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNRELIABLE_CAPACITIVE_SENSOR', index=25, number=16777216,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNEXPECTED_GEAR_RATIO', index=26, number=33554432,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HALL_MAGNETIC_MISMATCH', index=27, number=67108864,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2439,
  serialized_end=3272,
)
_sym_db.RegisterEnumDescriptor(_SAFETYIDENTIFIERBANKA)

SafetyIdentifierBankA = enum_type_wrapper.EnumTypeWrapper(_SAFETYIDENTIFIERBANKA)
_CUSTOMDATAINDEX = _descriptor.EnumDescriptor(
  name='CustomDataIndex',
  full_name='Kinova.Api.ActuatorConfig.CustomDataIndex',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NO_CUSTOM_DATA_SELECTED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_TEST_RAMP', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_MOTOR_ENCODER_RAW', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_JOINT_ENCODER_RAW', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_TEMPERATURE_PHASE_0', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_TEMPERATURE_PHASE_1', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_TEMPERATURE_PHASE_2', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT32_TORQUE_SENSOR_RAW_0', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT32_TORQUE_SENSOR_RAW_1', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT32_TORQUE_SENSOR_RAW_2', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT32_TORQUE_SENSOR_RAW_3', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_TORQUE_SENSOR_0', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_TORQUE_SENSOR_1', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_TORQUE_SENSOR_2', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_TORQUE_SENSOR_3', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_MOTOR_ENCODER_RAW_LATCH_ON_INDEX_RISING', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_JOINT_ENCODER_RAW_LATCH_ON_INDEX_RISING', index=16, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_ABSOLUTE_POSITION_SENSOR_RAW', index=17, number=17,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_ABSOLUTE_POSITION_SENSOR', index=18, number=18,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_CONTROL_POSITION_JOINT_REQUESTED', index=19, number=19,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_JIG_FLAGS', index=20, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_TICK_MOTOR_CONTROL', index=21, number=21,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_TICK_JOINT_CONTROL', index=22, number=22,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_INDEX_TICK_MOTOR_CONTROL', index=23, number=23,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_INDEX_TICK_JOINT_CONTROL', index=24, number=24,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_ACCELERATION_X', index=25, number=25,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_ACCELERATION_Y', index=26, number=26,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_ACCELERATION_Z', index=27, number=27,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_ANGULAR_RATE_X', index=28, number=28,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_ANGULAR_RATE_Y', index=29, number=29,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_ANGULAR_RATE_Z', index=30, number=30,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_POSITION_MOTOR_CMD', index=31, number=31,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_VELOCITY_MOTOR_CMD', index=32, number=32,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_POSITION_MOTOR', index=33, number=33,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_VELOCITY_MOTOR', index=34, number=34,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_COMMUNICATIONS_JITTER', index=35, number=35,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_TORQUE_AVERAGE', index=36, number=36,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_CURRENT_MOTOR', index=37, number=37,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_VOLTAGE_DIGITAL', index=38, number=38,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_TEMPERATURE_MOTOR_CELSIUS', index=39, number=39,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_TEMPERATURE_CORE_CELSIUS', index=40, number=40,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_FAULT_A', index=41, number=41,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_FAULT_B', index=42, number=42,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_WARNING_A', index=43, number=43,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_WARNING_B', index=44, number=44,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_POSITION_FROM_HALLS', index=45, number=45,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_PHASE_CURRENT_0', index=46, number=46,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_PHASE_CURRENT_1', index=47, number=47,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_PHASE_CURRENT_2', index=48, number=48,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_PHASE_PWM_0', index=49, number=49,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_PHASE_PWM_1', index=50, number=50,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_PHASE_PWM_2', index=51, number=51,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_MOTOR_ELECTRICAL_ANGLE', index=52, number=52,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_CURRENT_MOTOR_CMD', index=53, number=53,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_TORQUE_JOINT_CMD', index=54, number=54,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_POSITION_UNWRAPPED', index=55, number=55,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_HALL_SENSOR_0', index=56, number=56,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_HALL_SENSOR_1', index=57, number=57,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32_HALL_SENSOR_2', index=58, number=58,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT32_HALL_SENSOR_SCALED_0', index=59, number=59,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT32_HALL_SENSOR_SCALED_1', index=60, number=60,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT32_HALL_SENSOR_SCALED_2', index=61, number=61,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_0', index=62, number=62,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_1', index=63, number=63,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_2', index=64, number=64,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_3', index=65, number=65,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_4', index=66, number=66,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_5', index=67, number=67,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_6', index=68, number=68,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_7', index=69, number=69,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_8', index=70, number=70,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_9', index=71, number=71,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_10', index=72, number=72,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_11', index=73, number=73,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_12', index=74, number=74,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_13', index=75, number=75,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_14', index=76, number=76,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_A_15', index=77, number=77,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_0', index=78, number=78,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_1', index=79, number=79,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_2', index=80, number=80,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_3', index=81, number=81,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_4', index=82, number=82,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_5', index=83, number=83,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_6', index=84, number=84,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_7', index=85, number=85,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_8', index=86, number=86,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_9', index=87, number=87,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_10', index=88, number=88,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_11', index=89, number=89,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_12', index=90, number=90,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_13', index=91, number=91,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_14', index=92, number=92,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_COGGING_COEFFICIENT_B_15', index=93, number=93,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT_CURRENT_COGGING_FEEDFORWARD', index=94, number=94,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3275,
  serialized_end=6295,
)
_sym_db.RegisterEnumDescriptor(_CUSTOMDATAINDEX)

CustomDataIndex = enum_type_wrapper.EnumTypeWrapper(_CUSTOMDATAINDEX)
RESERVED_0 = 0
CURRENT_VERSION = 1
MAXIMAL_LIMIT = 0
MINIMAL_LIMIT = 1
NONE = 0
POSITION = 1
VELOCITY = 2
TORQUE = 3
CURRENT = 4
CUSTOM = 5
TORQUE_HIGH_VELOCITY = 6
CYCLIC = 0
ASYNC_CYCLIC_FLAGS = 1
ASYNC = 2
CYCLIC_JITTERCOMPENSATED_POSITION = 3
CYCLIC_JITTERCOMPENSATED_VELOCITY = 4
CYCLIC_JITTERCOMPENSATED_ACCELERATION = 5
RESERVED = 0
JOINT_POSITION = 1
MOTOR_POSITION = 2
JOINT_VELOCITY = 4
MOTOR_VELOCITY = 8
JOINT_TORQUE = 16
MOTOR_CURRENT = 32
JOINT_TORQUE_HIGH_VELOCITY = 64
FEEDFORWARD_OFF = 0
FEEDFORWARD_ADAPTIVE = 1
FEEDFORWARD_CALIBRATED = 2
UNSPECIFIED_ACTUATOR_SAFETY_IDENTIFIER_BANK_A = 0
FOLLOWING_ERROR = 1
MAXIMUM_VELOCITY = 2
JOINT_LIMIT_HIGH = 4
JOINT_LIMIT_LOW = 8
STRAIN_GAUGE_MISMATCH = 16
MAXIMUM_TORQUE = 32
UNRELIABLE_ABSOLUTE_POSITION = 64
MAGNETIC_POSITION = 128
HALL_POSITION = 256
HALL_SEQUENCE = 512
INPUT_ENCODER_HALL_MISMATCH = 1024
INPUT_ENCODER_INDEX_MISMATCH = 2048
INPUT_ENCODER_MAGNETIC_MISMATCH = 4096
MAXIMUM_MOTOR_CURRENT = 8192
MOTOR_CURRENT_MISMATCH = 16384
MAXIMUM_VOLTAGE = 32768
MINIMUM_VOLTAGE = 65536
MAXIMUM_MOTOR_TEMPERATURE = 131072
MAXIMUM_CORE_TEMPERATURE = 262144
NON_VOLATILE_MEMORY_CORRUPTED = 524288
MOTOR_DRIVER_FAULT = 1048576
EMERGENCY_LINE_ASSERTED = 2097152
COMMUNICATION_TICK_LOST = 4194304
WATCHDOG_TRIGGERED = 8388608
UNRELIABLE_CAPACITIVE_SENSOR = 16777216
UNEXPECTED_GEAR_RATIO = 33554432
HALL_MAGNETIC_MISMATCH = 67108864
NO_CUSTOM_DATA_SELECTED = 0
UINT32_TEST_RAMP = 1
UINT32_MOTOR_ENCODER_RAW = 2
UINT32_JOINT_ENCODER_RAW = 3
FLOAT_TEMPERATURE_PHASE_0 = 4
FLOAT_TEMPERATURE_PHASE_1 = 5
FLOAT_TEMPERATURE_PHASE_2 = 6
INT32_TORQUE_SENSOR_RAW_0 = 7
INT32_TORQUE_SENSOR_RAW_1 = 8
INT32_TORQUE_SENSOR_RAW_2 = 9
INT32_TORQUE_SENSOR_RAW_3 = 10
FLOAT_TORQUE_SENSOR_0 = 11
FLOAT_TORQUE_SENSOR_1 = 12
FLOAT_TORQUE_SENSOR_2 = 13
FLOAT_TORQUE_SENSOR_3 = 14
UINT32_MOTOR_ENCODER_RAW_LATCH_ON_INDEX_RISING = 15
UINT32_JOINT_ENCODER_RAW_LATCH_ON_INDEX_RISING = 16
UINT32_ABSOLUTE_POSITION_SENSOR_RAW = 17
FLOAT_ABSOLUTE_POSITION_SENSOR = 18
FLOAT_CONTROL_POSITION_JOINT_REQUESTED = 19
UINT32_JIG_FLAGS = 20
UINT32_TICK_MOTOR_CONTROL = 21
UINT32_TICK_JOINT_CONTROL = 22
UINT32_INDEX_TICK_MOTOR_CONTROL = 23
UINT32_INDEX_TICK_JOINT_CONTROL = 24
FLOAT_ACCELERATION_X = 25
FLOAT_ACCELERATION_Y = 26
FLOAT_ACCELERATION_Z = 27
FLOAT_ANGULAR_RATE_X = 28
FLOAT_ANGULAR_RATE_Y = 29
FLOAT_ANGULAR_RATE_Z = 30
FLOAT_POSITION_MOTOR_CMD = 31
FLOAT_VELOCITY_MOTOR_CMD = 32
FLOAT_POSITION_MOTOR = 33
FLOAT_VELOCITY_MOTOR = 34
UINT32_COMMUNICATIONS_JITTER = 35
FLOAT_TORQUE_AVERAGE = 36
FLOAT_CURRENT_MOTOR = 37
FLOAT_VOLTAGE_DIGITAL = 38
FLOAT_TEMPERATURE_MOTOR_CELSIUS = 39
FLOAT_TEMPERATURE_CORE_CELSIUS = 40
UINT32_FAULT_A = 41
UINT32_FAULT_B = 42
UINT32_WARNING_A = 43
UINT32_WARNING_B = 44
FLOAT_POSITION_FROM_HALLS = 45
FLOAT_PHASE_CURRENT_0 = 46
FLOAT_PHASE_CURRENT_1 = 47
FLOAT_PHASE_CURRENT_2 = 48
FLOAT_PHASE_PWM_0 = 49
FLOAT_PHASE_PWM_1 = 50
FLOAT_PHASE_PWM_2 = 51
FLOAT_MOTOR_ELECTRICAL_ANGLE = 52
FLOAT_CURRENT_MOTOR_CMD = 53
FLOAT_TORQUE_JOINT_CMD = 54
FLOAT_POSITION_UNWRAPPED = 55
UINT32_HALL_SENSOR_0 = 56
UINT32_HALL_SENSOR_1 = 57
UINT32_HALL_SENSOR_2 = 58
INT32_HALL_SENSOR_SCALED_0 = 59
INT32_HALL_SENSOR_SCALED_1 = 60
INT32_HALL_SENSOR_SCALED_2 = 61
FLOAT_COGGING_COEFFICIENT_A_0 = 62
FLOAT_COGGING_COEFFICIENT_A_1 = 63
FLOAT_COGGING_COEFFICIENT_A_2 = 64
FLOAT_COGGING_COEFFICIENT_A_3 = 65
FLOAT_COGGING_COEFFICIENT_A_4 = 66
FLOAT_COGGING_COEFFICIENT_A_5 = 67
FLOAT_COGGING_COEFFICIENT_A_6 = 68
FLOAT_COGGING_COEFFICIENT_A_7 = 69
FLOAT_COGGING_COEFFICIENT_A_8 = 70
FLOAT_COGGING_COEFFICIENT_A_9 = 71
FLOAT_COGGING_COEFFICIENT_A_10 = 72
FLOAT_COGGING_COEFFICIENT_A_11 = 73
FLOAT_COGGING_COEFFICIENT_A_12 = 74
FLOAT_COGGING_COEFFICIENT_A_13 = 75
FLOAT_COGGING_COEFFICIENT_A_14 = 76
FLOAT_COGGING_COEFFICIENT_A_15 = 77
FLOAT_COGGING_COEFFICIENT_B_0 = 78
FLOAT_COGGING_COEFFICIENT_B_1 = 79
FLOAT_COGGING_COEFFICIENT_B_2 = 80
FLOAT_COGGING_COEFFICIENT_B_3 = 81
FLOAT_COGGING_COEFFICIENT_B_4 = 82
FLOAT_COGGING_COEFFICIENT_B_5 = 83
FLOAT_COGGING_COEFFICIENT_B_6 = 84
FLOAT_COGGING_COEFFICIENT_B_7 = 85
FLOAT_COGGING_COEFFICIENT_B_8 = 86
FLOAT_COGGING_COEFFICIENT_B_9 = 87
FLOAT_COGGING_COEFFICIENT_B_10 = 88
FLOAT_COGGING_COEFFICIENT_B_11 = 89
FLOAT_COGGING_COEFFICIENT_B_12 = 90
FLOAT_COGGING_COEFFICIENT_B_13 = 91
FLOAT_COGGING_COEFFICIENT_B_14 = 92
FLOAT_COGGING_COEFFICIENT_B_15 = 93
FLOAT_CURRENT_COGGING_FEEDFORWARD = 94



_AXISPOSITION = _descriptor.Descriptor(
  name='AxisPosition',
  full_name='Kinova.Api.ActuatorConfig.AxisPosition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='position', full_name='Kinova.Api.ActuatorConfig.AxisPosition.position', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=65,
  serialized_end=97,
)


_AXISOFFSETS = _descriptor.Descriptor(
  name='AxisOffsets',
  full_name='Kinova.Api.ActuatorConfig.AxisOffsets',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='absolute_offset', full_name='Kinova.Api.ActuatorConfig.AxisOffsets.absolute_offset', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='relative_offset', full_name='Kinova.Api.ActuatorConfig.AxisOffsets.relative_offset', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=99,
  serialized_end=162,
)


_TORQUECALIBRATION = _descriptor.Descriptor(
  name='TorqueCalibration',
  full_name='Kinova.Api.ActuatorConfig.TorqueCalibration',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='global_gain', full_name='Kinova.Api.ActuatorConfig.TorqueCalibration.global_gain', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='global_offset', full_name='Kinova.Api.ActuatorConfig.TorqueCalibration.global_offset', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gain', full_name='Kinova.Api.ActuatorConfig.TorqueCalibration.gain', index=2,
      number=3, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='offset', full_name='Kinova.Api.ActuatorConfig.TorqueCalibration.offset', index=3,
      number=4, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=164,
  serialized_end=257,
)


_TORQUEOFFSET = _descriptor.Descriptor(
  name='TorqueOffset',
  full_name='Kinova.Api.ActuatorConfig.TorqueOffset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='torque_offset', full_name='Kinova.Api.ActuatorConfig.TorqueOffset.torque_offset', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=259,
  serialized_end=296,
)


_CONTROLMODEINFORMATION = _descriptor.Descriptor(
  name='ControlModeInformation',
  full_name='Kinova.Api.ActuatorConfig.ControlModeInformation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='control_mode', full_name='Kinova.Api.ActuatorConfig.ControlModeInformation.control_mode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=298,
  serialized_end=384,
)


_CONTROLLOOP = _descriptor.Descriptor(
  name='ControlLoop',
  full_name='Kinova.Api.ActuatorConfig.ControlLoop',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='control_loop', full_name='Kinova.Api.ActuatorConfig.ControlLoop.control_loop', index=0,
      number=1, type=7, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=386,
  serialized_end=421,
)


_LOOPSELECTION = _descriptor.Descriptor(
  name='LoopSelection',
  full_name='Kinova.Api.ActuatorConfig.LoopSelection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loop_selection', full_name='Kinova.Api.ActuatorConfig.LoopSelection.loop_selection', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=423,
  serialized_end=511,
)


_VECTORDRIVEPARAMETERS = _descriptor.Descriptor(
  name='VectorDriveParameters',
  full_name='Kinova.Api.ActuatorConfig.VectorDriveParameters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='kpq', full_name='Kinova.Api.ActuatorConfig.VectorDriveParameters.kpq', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='kiq', full_name='Kinova.Api.ActuatorConfig.VectorDriveParameters.kiq', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='kpd', full_name='Kinova.Api.ActuatorConfig.VectorDriveParameters.kpd', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='kid', full_name='Kinova.Api.ActuatorConfig.VectorDriveParameters.kid', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=513,
  serialized_end=588,
)


_ENCODERDERIVATIVEPARAMETERS = _descriptor.Descriptor(
  name='EncoderDerivativeParameters',
  full_name='Kinova.Api.ActuatorConfig.EncoderDerivativeParameters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='max_window_width', full_name='Kinova.Api.ActuatorConfig.EncoderDerivativeParameters.max_window_width', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='min_angle', full_name='Kinova.Api.ActuatorConfig.EncoderDerivativeParameters.min_angle', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=590,
  serialized_end=664,
)


_CONTROLLOOPPARAMETERS = _descriptor.Descriptor(
  name='ControlLoopParameters',
  full_name='Kinova.Api.ActuatorConfig.ControlLoopParameters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loop_selection', full_name='Kinova.Api.ActuatorConfig.ControlLoopParameters.loop_selection', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error_saturation', full_name='Kinova.Api.ActuatorConfig.ControlLoopParameters.error_saturation', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_saturation', full_name='Kinova.Api.ActuatorConfig.ControlLoopParameters.output_saturation', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='kAz', full_name='Kinova.Api.ActuatorConfig.ControlLoopParameters.kAz', index=3,
      number=4, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='kBz', full_name='Kinova.Api.ActuatorConfig.ControlLoopParameters.kBz', index=4,
      number=5, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error_dead_band', full_name='Kinova.Api.ActuatorConfig.ControlLoopParameters.error_dead_band', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=667,
  serialized_end=867,
)


_FREQUENCYRESPONSE = _descriptor.Descriptor(
  name='FrequencyResponse',
  full_name='Kinova.Api.ActuatorConfig.FrequencyResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loop_selection', full_name='Kinova.Api.ActuatorConfig.FrequencyResponse.loop_selection', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='min_frequency', full_name='Kinova.Api.ActuatorConfig.FrequencyResponse.min_frequency', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max_frequency', full_name='Kinova.Api.ActuatorConfig.FrequencyResponse.max_frequency', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='amplitude', full_name='Kinova.Api.ActuatorConfig.FrequencyResponse.amplitude', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='duration', full_name='Kinova.Api.ActuatorConfig.FrequencyResponse.duration', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=870,
  serialized_end=1045,
)


_STEPRESPONSE = _descriptor.Descriptor(
  name='StepResponse',
  full_name='Kinova.Api.ActuatorConfig.StepResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loop_selection', full_name='Kinova.Api.ActuatorConfig.StepResponse.loop_selection', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='amplitude', full_name='Kinova.Api.ActuatorConfig.StepResponse.amplitude', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='step_delay', full_name='Kinova.Api.ActuatorConfig.StepResponse.step_delay', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='duration', full_name='Kinova.Api.ActuatorConfig.StepResponse.duration', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1048,
  serialized_end=1192,
)


_RAMPRESPONSE = _descriptor.Descriptor(
  name='RampResponse',
  full_name='Kinova.Api.ActuatorConfig.RampResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loop_selection', full_name='Kinova.Api.ActuatorConfig.RampResponse.loop_selection', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='slope', full_name='Kinova.Api.ActuatorConfig.RampResponse.slope', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ramp_delay', full_name='Kinova.Api.ActuatorConfig.RampResponse.ramp_delay', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='duration', full_name='Kinova.Api.ActuatorConfig.RampResponse.duration', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1195,
  serialized_end=1335,
)


_CUSTOMDATASELECTION = _descriptor.Descriptor(
  name='CustomDataSelection',
  full_name='Kinova.Api.ActuatorConfig.CustomDataSelection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel', full_name='Kinova.Api.ActuatorConfig.CustomDataSelection.channel', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1337,
  serialized_end=1419,
)


_COMMANDMODEINFORMATION = _descriptor.Descriptor(
  name='CommandModeInformation',
  full_name='Kinova.Api.ActuatorConfig.CommandModeInformation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='command_mode', full_name='Kinova.Api.ActuatorConfig.CommandModeInformation.command_mode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1421,
  serialized_end=1507,
)


_SERVOING = _descriptor.Descriptor(
  name='Servoing',
  full_name='Kinova.Api.ActuatorConfig.Servoing',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enabled', full_name='Kinova.Api.ActuatorConfig.Servoing.enabled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1509,
  serialized_end=1536,
)


_POSITIONCOMMAND = _descriptor.Descriptor(
  name='PositionCommand',
  full_name='Kinova.Api.ActuatorConfig.PositionCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='position', full_name='Kinova.Api.ActuatorConfig.PositionCommand.position', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='velocity', full_name='Kinova.Api.ActuatorConfig.PositionCommand.velocity', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='acceleration', full_name='Kinova.Api.ActuatorConfig.PositionCommand.acceleration', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1538,
  serialized_end=1613,
)


_COGGINGFEEDFORWARDMODEINFORMATION = _descriptor.Descriptor(
  name='CoggingFeedforwardModeInformation',
  full_name='Kinova.Api.ActuatorConfig.CoggingFeedforwardModeInformation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cogging_feedforward_mode', full_name='Kinova.Api.ActuatorConfig.CoggingFeedforwardModeInformation.cogging_feedforward_mode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1615,
  serialized_end=1735,
)

_CONTROLMODEINFORMATION.fields_by_name['control_mode'].enum_type = _CONTROLMODE
_LOOPSELECTION.fields_by_name['loop_selection'].enum_type = _CONTROLLOOPSELECTION
_CONTROLLOOPPARAMETERS.fields_by_name['loop_selection'].enum_type = _CONTROLLOOPSELECTION
_FREQUENCYRESPONSE.fields_by_name['loop_selection'].enum_type = _CONTROLLOOPSELECTION
_STEPRESPONSE.fields_by_name['loop_selection'].enum_type = _CONTROLLOOPSELECTION
_RAMPRESPONSE.fields_by_name['loop_selection'].enum_type = _CONTROLLOOPSELECTION
_CUSTOMDATASELECTION.fields_by_name['channel'].enum_type = _CUSTOMDATAINDEX
_COMMANDMODEINFORMATION.fields_by_name['command_mode'].enum_type = _COMMANDMODE
_COGGINGFEEDFORWARDMODEINFORMATION.fields_by_name['cogging_feedforward_mode'].enum_type = _COGGINGFEEDFORWARDMODE
DESCRIPTOR.message_types_by_name['AxisPosition'] = _AXISPOSITION
DESCRIPTOR.message_types_by_name['AxisOffsets'] = _AXISOFFSETS
DESCRIPTOR.message_types_by_name['TorqueCalibration'] = _TORQUECALIBRATION
DESCRIPTOR.message_types_by_name['TorqueOffset'] = _TORQUEOFFSET
DESCRIPTOR.message_types_by_name['ControlModeInformation'] = _CONTROLMODEINFORMATION
DESCRIPTOR.message_types_by_name['ControlLoop'] = _CONTROLLOOP
DESCRIPTOR.message_types_by_name['LoopSelection'] = _LOOPSELECTION
DESCRIPTOR.message_types_by_name['VectorDriveParameters'] = _VECTORDRIVEPARAMETERS
DESCRIPTOR.message_types_by_name['EncoderDerivativeParameters'] = _ENCODERDERIVATIVEPARAMETERS
DESCRIPTOR.message_types_by_name['ControlLoopParameters'] = _CONTROLLOOPPARAMETERS
DESCRIPTOR.message_types_by_name['FrequencyResponse'] = _FREQUENCYRESPONSE
DESCRIPTOR.message_types_by_name['StepResponse'] = _STEPRESPONSE
DESCRIPTOR.message_types_by_name['RampResponse'] = _RAMPRESPONSE
DESCRIPTOR.message_types_by_name['CustomDataSelection'] = _CUSTOMDATASELECTION
DESCRIPTOR.message_types_by_name['CommandModeInformation'] = _COMMANDMODEINFORMATION
DESCRIPTOR.message_types_by_name['Servoing'] = _SERVOING
DESCRIPTOR.message_types_by_name['PositionCommand'] = _POSITIONCOMMAND
DESCRIPTOR.message_types_by_name['CoggingFeedforwardModeInformation'] = _COGGINGFEEDFORWARDMODEINFORMATION
DESCRIPTOR.enum_types_by_name['ServiceVersion'] = _SERVICEVERSION
DESCRIPTOR.enum_types_by_name['SafetyLimitType'] = _SAFETYLIMITTYPE
DESCRIPTOR.enum_types_by_name['ControlMode'] = _CONTROLMODE
DESCRIPTOR.enum_types_by_name['CommandMode'] = _COMMANDMODE
DESCRIPTOR.enum_types_by_name['ControlLoopSelection'] = _CONTROLLOOPSELECTION
DESCRIPTOR.enum_types_by_name['CoggingFeedforwardMode'] = _COGGINGFEEDFORWARDMODE
DESCRIPTOR.enum_types_by_name['SafetyIdentifierBankA'] = _SAFETYIDENTIFIERBANKA
DESCRIPTOR.enum_types_by_name['CustomDataIndex'] = _CUSTOMDATAINDEX
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AxisPosition = _reflection.GeneratedProtocolMessageType('AxisPosition', (_message.Message,), dict(
  DESCRIPTOR = _AXISPOSITION,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.AxisPosition)
  ))
_sym_db.RegisterMessage(AxisPosition)

AxisOffsets = _reflection.GeneratedProtocolMessageType('AxisOffsets', (_message.Message,), dict(
  DESCRIPTOR = _AXISOFFSETS,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.AxisOffsets)
  ))
_sym_db.RegisterMessage(AxisOffsets)

TorqueCalibration = _reflection.GeneratedProtocolMessageType('TorqueCalibration', (_message.Message,), dict(
  DESCRIPTOR = _TORQUECALIBRATION,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.TorqueCalibration)
  ))
_sym_db.RegisterMessage(TorqueCalibration)

TorqueOffset = _reflection.GeneratedProtocolMessageType('TorqueOffset', (_message.Message,), dict(
  DESCRIPTOR = _TORQUEOFFSET,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.TorqueOffset)
  ))
_sym_db.RegisterMessage(TorqueOffset)

ControlModeInformation = _reflection.GeneratedProtocolMessageType('ControlModeInformation', (_message.Message,), dict(
  DESCRIPTOR = _CONTROLMODEINFORMATION,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.ControlModeInformation)
  ))
_sym_db.RegisterMessage(ControlModeInformation)

ControlLoop = _reflection.GeneratedProtocolMessageType('ControlLoop', (_message.Message,), dict(
  DESCRIPTOR = _CONTROLLOOP,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.ControlLoop)
  ))
_sym_db.RegisterMessage(ControlLoop)

LoopSelection = _reflection.GeneratedProtocolMessageType('LoopSelection', (_message.Message,), dict(
  DESCRIPTOR = _LOOPSELECTION,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.LoopSelection)
  ))
_sym_db.RegisterMessage(LoopSelection)

VectorDriveParameters = _reflection.GeneratedProtocolMessageType('VectorDriveParameters', (_message.Message,), dict(
  DESCRIPTOR = _VECTORDRIVEPARAMETERS,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.VectorDriveParameters)
  ))
_sym_db.RegisterMessage(VectorDriveParameters)

EncoderDerivativeParameters = _reflection.GeneratedProtocolMessageType('EncoderDerivativeParameters', (_message.Message,), dict(
  DESCRIPTOR = _ENCODERDERIVATIVEPARAMETERS,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.EncoderDerivativeParameters)
  ))
_sym_db.RegisterMessage(EncoderDerivativeParameters)

ControlLoopParameters = _reflection.GeneratedProtocolMessageType('ControlLoopParameters', (_message.Message,), dict(
  DESCRIPTOR = _CONTROLLOOPPARAMETERS,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.ControlLoopParameters)
  ))
_sym_db.RegisterMessage(ControlLoopParameters)

FrequencyResponse = _reflection.GeneratedProtocolMessageType('FrequencyResponse', (_message.Message,), dict(
  DESCRIPTOR = _FREQUENCYRESPONSE,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.FrequencyResponse)
  ))
_sym_db.RegisterMessage(FrequencyResponse)

StepResponse = _reflection.GeneratedProtocolMessageType('StepResponse', (_message.Message,), dict(
  DESCRIPTOR = _STEPRESPONSE,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.StepResponse)
  ))
_sym_db.RegisterMessage(StepResponse)

RampResponse = _reflection.GeneratedProtocolMessageType('RampResponse', (_message.Message,), dict(
  DESCRIPTOR = _RAMPRESPONSE,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.RampResponse)
  ))
_sym_db.RegisterMessage(RampResponse)

CustomDataSelection = _reflection.GeneratedProtocolMessageType('CustomDataSelection', (_message.Message,), dict(
  DESCRIPTOR = _CUSTOMDATASELECTION,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.CustomDataSelection)
  ))
_sym_db.RegisterMessage(CustomDataSelection)

CommandModeInformation = _reflection.GeneratedProtocolMessageType('CommandModeInformation', (_message.Message,), dict(
  DESCRIPTOR = _COMMANDMODEINFORMATION,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.CommandModeInformation)
  ))
_sym_db.RegisterMessage(CommandModeInformation)

Servoing = _reflection.GeneratedProtocolMessageType('Servoing', (_message.Message,), dict(
  DESCRIPTOR = _SERVOING,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.Servoing)
  ))
_sym_db.RegisterMessage(Servoing)

PositionCommand = _reflection.GeneratedProtocolMessageType('PositionCommand', (_message.Message,), dict(
  DESCRIPTOR = _POSITIONCOMMAND,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.PositionCommand)
  ))
_sym_db.RegisterMessage(PositionCommand)

CoggingFeedforwardModeInformation = _reflection.GeneratedProtocolMessageType('CoggingFeedforwardModeInformation', (_message.Message,), dict(
  DESCRIPTOR = _COGGINGFEEDFORWARDMODEINFORMATION,
  __module__ = 'ActuatorConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.ActuatorConfig.CoggingFeedforwardModeInformation)
  ))
_sym_db.RegisterMessage(CoggingFeedforwardModeInformation)



_ACTUATORCONFIG = _descriptor.ServiceDescriptor(
  name='ActuatorConfig',
  full_name='Kinova.Api.ActuatorConfig.ActuatorConfig',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=6298,
  serialized_end=9313,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetAxisOffsets',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.GetAxisOffsets',
    index=0,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_AXISOFFSETS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetAxisOffsets',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.SetAxisOffsets',
    index=1,
    containing_service=None,
    input_type=_AXISPOSITION,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ReadTorqueCalibration',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.ReadTorqueCalibration',
    index=2,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_TORQUECALIBRATION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='WriteTorqueCalibration',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.WriteTorqueCalibration',
    index=3,
    containing_service=None,
    input_type=_TORQUECALIBRATION,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetTorqueOffset',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.SetTorqueOffset',
    index=4,
    containing_service=None,
    input_type=_TORQUEOFFSET,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetControlMode',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.GetControlMode',
    index=5,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_CONTROLMODEINFORMATION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetControlMode',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.SetControlMode',
    index=6,
    containing_service=None,
    input_type=_CONTROLMODEINFORMATION,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetActivatedControlLoop',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.GetActivatedControlLoop',
    index=7,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_CONTROLLOOP,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetActivatedControlLoop',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.SetActivatedControlLoop',
    index=8,
    containing_service=None,
    input_type=_CONTROLLOOP,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetVectorDriveParameters',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.GetVectorDriveParameters',
    index=9,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_VECTORDRIVEPARAMETERS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetVectorDriveParameters',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.SetVectorDriveParameters',
    index=10,
    containing_service=None,
    input_type=_VECTORDRIVEPARAMETERS,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetEncoderDerivativeParameters',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.GetEncoderDerivativeParameters',
    index=11,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_ENCODERDERIVATIVEPARAMETERS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetEncoderDerivativeParameters',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.SetEncoderDerivativeParameters',
    index=12,
    containing_service=None,
    input_type=_ENCODERDERIVATIVEPARAMETERS,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetControlLoopParameters',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.GetControlLoopParameters',
    index=13,
    containing_service=None,
    input_type=_LOOPSELECTION,
    output_type=_CONTROLLOOPPARAMETERS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetControlLoopParameters',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.SetControlLoopParameters',
    index=14,
    containing_service=None,
    input_type=_CONTROLLOOPPARAMETERS,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StartFrequencyResponse',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.StartFrequencyResponse',
    index=15,
    containing_service=None,
    input_type=_FREQUENCYRESPONSE,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StopFrequencyResponse',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.StopFrequencyResponse',
    index=16,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StartStepResponse',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.StartStepResponse',
    index=17,
    containing_service=None,
    input_type=_STEPRESPONSE,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StopStepResponse',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.StopStepResponse',
    index=18,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StartRampResponse',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.StartRampResponse',
    index=19,
    containing_service=None,
    input_type=_RAMPRESPONSE,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StopRampResponse',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.StopRampResponse',
    index=20,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SelectCustomData',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.SelectCustomData',
    index=21,
    containing_service=None,
    input_type=_CUSTOMDATASELECTION,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetSelectedCustomData',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.GetSelectedCustomData',
    index=22,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_CUSTOMDATASELECTION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetCommandMode',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.SetCommandMode',
    index=23,
    containing_service=None,
    input_type=_COMMANDMODEINFORMATION,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ClearFaults',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.ClearFaults',
    index=24,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetServoing',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.SetServoing',
    index=25,
    containing_service=None,
    input_type=_SERVOING,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='MoveToPosition',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.MoveToPosition',
    index=26,
    containing_service=None,
    input_type=_POSITIONCOMMAND,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCommandMode',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.GetCommandMode',
    index=27,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_COMMANDMODEINFORMATION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetServoing',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.GetServoing',
    index=28,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_SERVOING,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetTorqueOffset',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.GetTorqueOffset',
    index=29,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_TORQUEOFFSET,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetCoggingFeedforwardMode',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.SetCoggingFeedforwardMode',
    index=30,
    containing_service=None,
    input_type=_COGGINGFEEDFORWARDMODEINFORMATION,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCoggingFeedforwardMode',
    full_name='Kinova.Api.ActuatorConfig.ActuatorConfig.GetCoggingFeedforwardMode',
    index=31,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_COGGINGFEEDFORWARDMODEINFORMATION,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ACTUATORCONFIG)

DESCRIPTOR.services_by_name['ActuatorConfig'] = _ACTUATORCONFIG

# @@protoc_insertion_point(module_scope)
