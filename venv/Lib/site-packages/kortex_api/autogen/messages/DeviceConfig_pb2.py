# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: DeviceConfig.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import Common_pb2 as Common__pb2

from .Common_pb2 import *

DESCRIPTOR = _descriptor.FileDescriptor(
  name='DeviceConfig.proto',
  package='Kinova.Api.DeviceConfig',
  syntax='proto3',
  serialized_pb=_b('\n\x12\x44\x65viceConfig.proto\x12\x17Kinova.Api.DeviceConfig\x1a\x0c\x43ommon.proto\"A\n\nDeviceType\x12\x33\n\x0b\x64\x65vice_type\x18\x01 \x01(\x0e\x32\x1e.Kinova.Api.Common.DeviceTypes\">\n\x07RunMode\x12\x33\n\x08run_mode\x18\x01 \x01(\x0e\x32!.Kinova.Api.DeviceConfig.RunModes\"+\n\x0f\x46irmwareVersion\x12\x18\n\x10\x66irmware_version\x18\x01 \x01(\r\"/\n\x11\x42ootloaderVersion\x12\x1a\n\x12\x62ootloader_version\x18\x01 \x01(\r\"#\n\x0bModelNumber\x12\x14\n\x0cmodel_number\x18\x01 \x01(\t\"!\n\nPartNumber\x12\x13\n\x0bpart_number\x18\x01 \x01(\t\"%\n\x0cSerialNumber\x12\x15\n\rserial_number\x18\x01 \x01(\t\"!\n\nMACAddress\x12\x13\n\x0bmac_address\x18\x01 \x01(\x0c\"\\\n\x0cIPv4Settings\x12\x14\n\x0cipv4_address\x18\x01 \x01(\r\x12\x18\n\x10ipv4_subnet_mask\x18\x02 \x01(\r\x12\x1c\n\x14ipv4_default_gateway\x18\x03 \x01(\r\"2\n\x12PartNumberRevision\x12\x1c\n\x14part_number_revision\x18\x01 \x01(\t\":\n\x15PowerOnSelfTestResult\x12!\n\x19power_on_self_test_result\x18\x01 \x01(\r\"\x1b\n\nRebootRqst\x12\r\n\x05\x64\x65lay\x18\x01 \x01(\r\"\xb4\x03\n\x11SafetyInformation\x12/\n\x06handle\x18\x01 \x01(\x0b\x32\x1f.Kinova.Api.Common.SafetyHandle\x12\x1f\n\x17\x63\x61n_change_safety_state\x18\x02 \x01(\x08\x12\x1d\n\x15has_warning_threshold\x18\x03 \x01(\x08\x12\x1b\n\x13has_error_threshold\x18\x04 \x01(\x08\x12<\n\nlimit_type\x18\x05 \x01(\x0e\x32(.Kinova.Api.DeviceConfig.SafetyLimitType\x12!\n\x19\x64\x65\x66\x61ult_warning_threshold\x18\x06 \x01(\x02\x12\x1f\n\x17\x64\x65\x66\x61ult_error_threshold\x18\x07 \x01(\x02\x12\x18\n\x10upper_hard_limit\x18\x08 \x01(\x02\x12\x18\n\x10lower_hard_limit\x18\t \x01(\x02\x12\x34\n\x06status\x18\x0b \x01(\x0e\x32$.Kinova.Api.Common.SafetyStatusValue\x12%\n\x04unit\x18\x0c \x01(\x0e\x32\x17.Kinova.Api.Common.Unit\"X\n\x15SafetyInformationList\x12?\n\x0binformation\x18\x01 \x03(\x0b\x32*.Kinova.Api.DeviceConfig.SafetyInformation\"O\n\x0cSafetyEnable\x12/\n\x06handle\x18\x01 \x01(\x0b\x32\x1f.Kinova.Api.Common.SafetyHandle\x12\x0e\n\x06\x65nable\x18\x02 \x01(\x08\"Q\n\x0fSafetyThreshold\x12/\n\x06handle\x18\x01 \x01(\x0b\x32\x1f.Kinova.Api.Common.SafetyHandle\x12\r\n\x05value\x18\x02 \x01(\x02\"\xb1\x01\n\x13SafetyConfiguration\x12/\n\x06handle\x18\x01 \x01(\x0b\x32\x1f.Kinova.Api.Common.SafetyHandle\x12\x17\n\x0f\x65rror_threshold\x18\x02 \x01(\x02\x12\x19\n\x11warning_threshold\x18\x03 \x01(\x02\x12\x35\n\x06\x65nable\x18\x04 \x01(\x0b\x32%.Kinova.Api.DeviceConfig.SafetyEnable\"^\n\x17SafetyConfigurationList\x12\x43\n\rconfiguration\x18\x01 \x03(\x0b\x32,.Kinova.Api.DeviceConfig.SafetyConfiguration\"C\n\x0cSafetyStatus\x12\x33\n\x05value\x18\x01 \x01(\x0e\x32$.Kinova.Api.Common.SafetyStatusValue\"\x95\x01\n\x14\x43\x61librationParameter\x12(\n calibration_parameter_identifier\x18\x01 \x01(\r\x12\x18\n\x0esignedIntValue\x18\x02 \x01(\x05H\x00\x12\x1a\n\x10unsignedIntValue\x18\x03 \x01(\rH\x00\x12\x14\n\nfloatValue\x18\x04 \x01(\x02H\x00\x42\x07\n\x05value\"\x9f\x01\n\x0b\x43\x61libration\x12\x42\n\x10\x63\x61libration_item\x18\x01 \x01(\x0e\x32(.Kinova.Api.DeviceConfig.CalibrationItem\x12L\n\x15\x63\x61libration_parameter\x18\x02 \x03(\x0b\x32-.Kinova.Api.DeviceConfig.CalibrationParameter\"X\n\x12\x43\x61librationElement\x12\x42\n\x10\x63\x61libration_item\x18\x01 \x01(\x0e\x32(.Kinova.Api.DeviceConfig.CalibrationItem\"x\n\x11\x43\x61librationResult\x12\x46\n\x12\x63\x61libration_status\x18\x01 \x01(\x0e\x32*.Kinova.Api.DeviceConfig.CalibrationStatus\x12\x1b\n\x13\x63\x61libration_details\x18\x02 \x01(\r\"o\n\x0e\x43\x61pSenseConfig\x12\x33\n\x04mode\x18\x01 \x01(\x0e\x32%.Kinova.Api.DeviceConfig.CapSenseMode\x12\x13\n\x0bthreshold_a\x18\x02 \x01(\x02\x12\x13\n\x0bthreshold_b\x18\x03 \x01(\x02\"2\n\x10\x43\x61pSenseRegister\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\r\x12\r\n\x05value\x18\x02 \x01(\r*5\n\x0eServiceVersion\x12\x0e\n\nRESERVED_0\x10\x00\x12\x13\n\x0f\x43URRENT_VERSION\x10\x01*g\n\x08RunModes\x12\x0c\n\x08RUN_MODE\x10\x00\x12\x14\n\x10\x43\x41LIBRATION_MODE\x10\x01\x12\x16\n\x12\x43ONFIGURATION_MODE\x10\x02\x12\x0e\n\nDEBUG_MODE\x10\x03\x12\x0f\n\x0bTUNING_MODE\x10\x04*m\n\x0f\x43\x61librationItem\x12 \n\x1cUNSPECIFIED_CALIBRATION_ITEM\x10\x00\x12\x0b\n\x07\x43OGGING\x10\x01\x12\x0c\n\x08MAGNETIC\x10\x02\x12\t\n\x05MOTOR\x10\x03\x12\x12\n\x0ePOSITION_RANGE\x10\x04*z\n\x11\x43\x61librationStatus\x12\"\n\x1eUNSPECIFIED_CALIBRATION_STATUS\x10\x00\x12\x12\n\x0eNOT_CALIBRATED\x10\x01\x12\x0f\n\x0bIN_PROGRESS\x10\x02\x12\x0e\n\nCALIBRATED\x10\x03\x12\x0c\n\x08IN_FAULT\x10\x04*k\n\x0fSafetyLimitType\x12!\n\x1dUNSPECIFIED_SAFETY_LIMIT_TYPE\x10\x00\x12\x11\n\rMINIMAL_LIMIT\x10\x01\x12\x11\n\rMAXIMAL_LIMIT\x10\x02\x12\x0f\n\x0b\x45VENT_LIMIT\x10\x03*\x81\x01\n\x0c\x43\x61pSenseMode\x12\x0c\n\x08RESERVED\x10\x00\x12\x0c\n\x08INACTIVE\x10\x01\x12\x19\n\x15\x41\x43TIVE_AUTO_THRESHOLD\x10\x02\x12\x14\n\x10\x41\x43TIVE_NOISE_ATT\x10\x04\x12\x11\n\rACTIVE_NORMAL\x10\x05\x12\x11\n\rCONFIGURATION\x10\x06\x32\xfd\x17\n\x0c\x44\x65viceConfig\x12H\n\nGetRunMode\x12\x18.Kinova.Api.Common.Empty\x1a .Kinova.Api.DeviceConfig.RunMode\x12H\n\nSetRunMode\x12 .Kinova.Api.DeviceConfig.RunMode\x1a\x18.Kinova.Api.Common.Empty\x12N\n\rGetDeviceType\x12\x18.Kinova.Api.Common.Empty\x1a#.Kinova.Api.DeviceConfig.DeviceType\x12X\n\x12GetFirmwareVersion\x12\x18.Kinova.Api.Common.Empty\x1a(.Kinova.Api.DeviceConfig.FirmwareVersion\x12\\\n\x14GetBootloaderVersion\x12\x18.Kinova.Api.Common.Empty\x1a*.Kinova.Api.DeviceConfig.BootloaderVersion\x12P\n\x0eGetModelNumber\x12\x18.Kinova.Api.Common.Empty\x1a$.Kinova.Api.DeviceConfig.ModelNumber\x12N\n\rGetPartNumber\x12\x18.Kinova.Api.Common.Empty\x1a#.Kinova.Api.DeviceConfig.PartNumber\x12R\n\x0fGetSerialNumber\x12\x18.Kinova.Api.Common.Empty\x1a%.Kinova.Api.DeviceConfig.SerialNumber\x12N\n\rGetMACAddress\x12\x18.Kinova.Api.Common.Empty\x1a#.Kinova.Api.DeviceConfig.MACAddress\x12R\n\x0fGetIPv4Settings\x12\x18.Kinova.Api.Common.Empty\x1a%.Kinova.Api.DeviceConfig.IPv4Settings\x12R\n\x0fSetIPv4Settings\x12%.Kinova.Api.DeviceConfig.IPv4Settings\x1a\x18.Kinova.Api.Common.Empty\x12^\n\x15GetPartNumberRevision\x12\x18.Kinova.Api.Common.Empty\x1a+.Kinova.Api.DeviceConfig.PartNumberRevision\x12N\n\rRebootRequest\x12#.Kinova.Api.DeviceConfig.RebootRqst\x1a\x18.Kinova.Api.Common.Empty\x12R\n\x0fSetSafetyEnable\x12%.Kinova.Api.DeviceConfig.SafetyEnable\x1a\x18.Kinova.Api.Common.Empty\x12]\n\x17SetSafetyErrorThreshold\x12(.Kinova.Api.DeviceConfig.SafetyThreshold\x1a\x18.Kinova.Api.Common.Empty\x12_\n\x19SetSafetyWarningThreshold\x12(.Kinova.Api.DeviceConfig.SafetyThreshold\x1a\x18.Kinova.Api.Common.Empty\x12`\n\x16SetSafetyConfiguration\x12,.Kinova.Api.DeviceConfig.SafetyConfiguration\x1a\x18.Kinova.Api.Common.Empty\x12g\n\x16GetSafetyConfiguration\x12\x1f.Kinova.Api.Common.SafetyHandle\x1a,.Kinova.Api.DeviceConfig.SafetyConfiguration\x12\x63\n\x14GetSafetyInformation\x12\x1f.Kinova.Api.Common.SafetyHandle\x1a*.Kinova.Api.DeviceConfig.SafetyInformation\x12Y\n\x0fGetSafetyEnable\x12\x1f.Kinova.Api.Common.SafetyHandle\x1a%.Kinova.Api.DeviceConfig.SafetyEnable\x12Y\n\x0fGetSafetyStatus\x12\x1f.Kinova.Api.Common.SafetyHandle\x1a%.Kinova.Api.DeviceConfig.SafetyStatus\x12J\n\x14\x43learAllSafetyStatus\x12\x18.Kinova.Api.Common.Empty\x1a\x18.Kinova.Api.Common.Empty\x12N\n\x11\x43learSafetyStatus\x12\x1f.Kinova.Api.Common.SafetyHandle\x1a\x18.Kinova.Api.Common.Empty\x12g\n\x19GetAllSafetyConfiguration\x12\x18.Kinova.Api.Common.Empty\x1a\x30.Kinova.Api.DeviceConfig.SafetyConfigurationList\x12\x63\n\x17GetAllSafetyInformation\x12\x18.Kinova.Api.Common.Empty\x1a..Kinova.Api.DeviceConfig.SafetyInformationList\x12I\n\x13ResetSafetyDefaults\x12\x18.Kinova.Api.Common.Empty\x1a\x18.Kinova.Api.Common.Empty\x12\\\n\x0bSafetyTopic\x12&.Kinova.Api.Common.NotificationOptions\x1a%.Kinova.Api.Common.NotificationHandle\x12T\n\x12\x45xecuteCalibration\x12$.Kinova.Api.DeviceConfig.Calibration\x1a\x18.Kinova.Api.Common.Empty\x12o\n\x14GetCalibrationResult\x12+.Kinova.Api.DeviceConfig.CalibrationElement\x1a*.Kinova.Api.DeviceConfig.CalibrationResult\x12\x63\n\x0fStopCalibration\x12$.Kinova.Api.DeviceConfig.Calibration\x1a*.Kinova.Api.DeviceConfig.CalibrationResult\x12V\n\x11SetCapSenseConfig\x12\'.Kinova.Api.DeviceConfig.CapSenseConfig\x1a\x18.Kinova.Api.Common.Empty\x12V\n\x11GetCapSenseConfig\x12\x18.Kinova.Api.Common.Empty\x1a\'.Kinova.Api.DeviceConfig.CapSenseConfig\x12l\n\x14ReadCapSenseRegister\x12).Kinova.Api.DeviceConfig.CapSenseRegister\x1a).Kinova.Api.DeviceConfig.CapSenseRegister\x12\\\n\x15WriteCapSenseRegister\x12).Kinova.Api.DeviceConfig.CapSenseRegister\x1a\x18.Kinova.Api.Common.EmptyP\x00\x62\x06proto3')
  ,
  dependencies=[Common__pb2.DESCRIPTOR,],
  public_dependencies=[Common__pb2.DESCRIPTOR,])

_SERVICEVERSION = _descriptor.EnumDescriptor(
  name='ServiceVersion',
  full_name='Kinova.Api.DeviceConfig.ServiceVersion',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RESERVED_0', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CURRENT_VERSION', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2396,
  serialized_end=2449,
)
_sym_db.RegisterEnumDescriptor(_SERVICEVERSION)

ServiceVersion = enum_type_wrapper.EnumTypeWrapper(_SERVICEVERSION)
_RUNMODES = _descriptor.EnumDescriptor(
  name='RunModes',
  full_name='Kinova.Api.DeviceConfig.RunModes',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RUN_MODE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CALIBRATION_MODE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONFIGURATION_MODE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEBUG_MODE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TUNING_MODE', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2451,
  serialized_end=2554,
)
_sym_db.RegisterEnumDescriptor(_RUNMODES)

RunModes = enum_type_wrapper.EnumTypeWrapper(_RUNMODES)
_CALIBRATIONITEM = _descriptor.EnumDescriptor(
  name='CalibrationItem',
  full_name='Kinova.Api.DeviceConfig.CalibrationItem',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSPECIFIED_CALIBRATION_ITEM', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COGGING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAGNETIC', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MOTOR', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POSITION_RANGE', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2556,
  serialized_end=2665,
)
_sym_db.RegisterEnumDescriptor(_CALIBRATIONITEM)

CalibrationItem = enum_type_wrapper.EnumTypeWrapper(_CALIBRATIONITEM)
_CALIBRATIONSTATUS = _descriptor.EnumDescriptor(
  name='CalibrationStatus',
  full_name='Kinova.Api.DeviceConfig.CalibrationStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSPECIFIED_CALIBRATION_STATUS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_CALIBRATED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IN_PROGRESS', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CALIBRATED', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IN_FAULT', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2667,
  serialized_end=2789,
)
_sym_db.RegisterEnumDescriptor(_CALIBRATIONSTATUS)

CalibrationStatus = enum_type_wrapper.EnumTypeWrapper(_CALIBRATIONSTATUS)
_SAFETYLIMITTYPE = _descriptor.EnumDescriptor(
  name='SafetyLimitType',
  full_name='Kinova.Api.DeviceConfig.SafetyLimitType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSPECIFIED_SAFETY_LIMIT_TYPE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MINIMAL_LIMIT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAXIMAL_LIMIT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EVENT_LIMIT', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2791,
  serialized_end=2898,
)
_sym_db.RegisterEnumDescriptor(_SAFETYLIMITTYPE)

SafetyLimitType = enum_type_wrapper.EnumTypeWrapper(_SAFETYLIMITTYPE)
_CAPSENSEMODE = _descriptor.EnumDescriptor(
  name='CapSenseMode',
  full_name='Kinova.Api.DeviceConfig.CapSenseMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RESERVED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INACTIVE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIVE_AUTO_THRESHOLD', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIVE_NOISE_ATT', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIVE_NORMAL', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONFIGURATION', index=5, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2901,
  serialized_end=3030,
)
_sym_db.RegisterEnumDescriptor(_CAPSENSEMODE)

CapSenseMode = enum_type_wrapper.EnumTypeWrapper(_CAPSENSEMODE)
RESERVED_0 = 0
CURRENT_VERSION = 1
RUN_MODE = 0
CALIBRATION_MODE = 1
CONFIGURATION_MODE = 2
DEBUG_MODE = 3
TUNING_MODE = 4
UNSPECIFIED_CALIBRATION_ITEM = 0
COGGING = 1
MAGNETIC = 2
MOTOR = 3
POSITION_RANGE = 4
UNSPECIFIED_CALIBRATION_STATUS = 0
NOT_CALIBRATED = 1
IN_PROGRESS = 2
CALIBRATED = 3
IN_FAULT = 4
UNSPECIFIED_SAFETY_LIMIT_TYPE = 0
MINIMAL_LIMIT = 1
MAXIMAL_LIMIT = 2
EVENT_LIMIT = 3
RESERVED = 0
INACTIVE = 1
ACTIVE_AUTO_THRESHOLD = 2
ACTIVE_NOISE_ATT = 4
ACTIVE_NORMAL = 5
CONFIGURATION = 6



_DEVICETYPE = _descriptor.Descriptor(
  name='DeviceType',
  full_name='Kinova.Api.DeviceConfig.DeviceType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_type', full_name='Kinova.Api.DeviceConfig.DeviceType.device_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=61,
  serialized_end=126,
)


_RUNMODE = _descriptor.Descriptor(
  name='RunMode',
  full_name='Kinova.Api.DeviceConfig.RunMode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='run_mode', full_name='Kinova.Api.DeviceConfig.RunMode.run_mode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=128,
  serialized_end=190,
)


_FIRMWAREVERSION = _descriptor.Descriptor(
  name='FirmwareVersion',
  full_name='Kinova.Api.DeviceConfig.FirmwareVersion',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='firmware_version', full_name='Kinova.Api.DeviceConfig.FirmwareVersion.firmware_version', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=192,
  serialized_end=235,
)


_BOOTLOADERVERSION = _descriptor.Descriptor(
  name='BootloaderVersion',
  full_name='Kinova.Api.DeviceConfig.BootloaderVersion',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bootloader_version', full_name='Kinova.Api.DeviceConfig.BootloaderVersion.bootloader_version', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=237,
  serialized_end=284,
)


_MODELNUMBER = _descriptor.Descriptor(
  name='ModelNumber',
  full_name='Kinova.Api.DeviceConfig.ModelNumber',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='model_number', full_name='Kinova.Api.DeviceConfig.ModelNumber.model_number', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=286,
  serialized_end=321,
)


_PARTNUMBER = _descriptor.Descriptor(
  name='PartNumber',
  full_name='Kinova.Api.DeviceConfig.PartNumber',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='part_number', full_name='Kinova.Api.DeviceConfig.PartNumber.part_number', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=323,
  serialized_end=356,
)


_SERIALNUMBER = _descriptor.Descriptor(
  name='SerialNumber',
  full_name='Kinova.Api.DeviceConfig.SerialNumber',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='serial_number', full_name='Kinova.Api.DeviceConfig.SerialNumber.serial_number', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=358,
  serialized_end=395,
)


_MACADDRESS = _descriptor.Descriptor(
  name='MACAddress',
  full_name='Kinova.Api.DeviceConfig.MACAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mac_address', full_name='Kinova.Api.DeviceConfig.MACAddress.mac_address', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=397,
  serialized_end=430,
)


_IPV4SETTINGS = _descriptor.Descriptor(
  name='IPv4Settings',
  full_name='Kinova.Api.DeviceConfig.IPv4Settings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ipv4_address', full_name='Kinova.Api.DeviceConfig.IPv4Settings.ipv4_address', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ipv4_subnet_mask', full_name='Kinova.Api.DeviceConfig.IPv4Settings.ipv4_subnet_mask', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ipv4_default_gateway', full_name='Kinova.Api.DeviceConfig.IPv4Settings.ipv4_default_gateway', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=432,
  serialized_end=524,
)


_PARTNUMBERREVISION = _descriptor.Descriptor(
  name='PartNumberRevision',
  full_name='Kinova.Api.DeviceConfig.PartNumberRevision',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='part_number_revision', full_name='Kinova.Api.DeviceConfig.PartNumberRevision.part_number_revision', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=526,
  serialized_end=576,
)


_POWERONSELFTESTRESULT = _descriptor.Descriptor(
  name='PowerOnSelfTestResult',
  full_name='Kinova.Api.DeviceConfig.PowerOnSelfTestResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='power_on_self_test_result', full_name='Kinova.Api.DeviceConfig.PowerOnSelfTestResult.power_on_self_test_result', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=578,
  serialized_end=636,
)


_REBOOTRQST = _descriptor.Descriptor(
  name='RebootRqst',
  full_name='Kinova.Api.DeviceConfig.RebootRqst',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='delay', full_name='Kinova.Api.DeviceConfig.RebootRqst.delay', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=638,
  serialized_end=665,
)


_SAFETYINFORMATION = _descriptor.Descriptor(
  name='SafetyInformation',
  full_name='Kinova.Api.DeviceConfig.SafetyInformation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='handle', full_name='Kinova.Api.DeviceConfig.SafetyInformation.handle', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='can_change_safety_state', full_name='Kinova.Api.DeviceConfig.SafetyInformation.can_change_safety_state', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='has_warning_threshold', full_name='Kinova.Api.DeviceConfig.SafetyInformation.has_warning_threshold', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='has_error_threshold', full_name='Kinova.Api.DeviceConfig.SafetyInformation.has_error_threshold', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='limit_type', full_name='Kinova.Api.DeviceConfig.SafetyInformation.limit_type', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='default_warning_threshold', full_name='Kinova.Api.DeviceConfig.SafetyInformation.default_warning_threshold', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='default_error_threshold', full_name='Kinova.Api.DeviceConfig.SafetyInformation.default_error_threshold', index=6,
      number=7, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='upper_hard_limit', full_name='Kinova.Api.DeviceConfig.SafetyInformation.upper_hard_limit', index=7,
      number=8, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lower_hard_limit', full_name='Kinova.Api.DeviceConfig.SafetyInformation.lower_hard_limit', index=8,
      number=9, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='Kinova.Api.DeviceConfig.SafetyInformation.status', index=9,
      number=11, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unit', full_name='Kinova.Api.DeviceConfig.SafetyInformation.unit', index=10,
      number=12, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=668,
  serialized_end=1104,
)


_SAFETYINFORMATIONLIST = _descriptor.Descriptor(
  name='SafetyInformationList',
  full_name='Kinova.Api.DeviceConfig.SafetyInformationList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='information', full_name='Kinova.Api.DeviceConfig.SafetyInformationList.information', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1106,
  serialized_end=1194,
)


_SAFETYENABLE = _descriptor.Descriptor(
  name='SafetyEnable',
  full_name='Kinova.Api.DeviceConfig.SafetyEnable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='handle', full_name='Kinova.Api.DeviceConfig.SafetyEnable.handle', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable', full_name='Kinova.Api.DeviceConfig.SafetyEnable.enable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1196,
  serialized_end=1275,
)


_SAFETYTHRESHOLD = _descriptor.Descriptor(
  name='SafetyThreshold',
  full_name='Kinova.Api.DeviceConfig.SafetyThreshold',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='handle', full_name='Kinova.Api.DeviceConfig.SafetyThreshold.handle', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='Kinova.Api.DeviceConfig.SafetyThreshold.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1277,
  serialized_end=1358,
)


_SAFETYCONFIGURATION = _descriptor.Descriptor(
  name='SafetyConfiguration',
  full_name='Kinova.Api.DeviceConfig.SafetyConfiguration',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='handle', full_name='Kinova.Api.DeviceConfig.SafetyConfiguration.handle', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error_threshold', full_name='Kinova.Api.DeviceConfig.SafetyConfiguration.error_threshold', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='warning_threshold', full_name='Kinova.Api.DeviceConfig.SafetyConfiguration.warning_threshold', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable', full_name='Kinova.Api.DeviceConfig.SafetyConfiguration.enable', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1361,
  serialized_end=1538,
)


_SAFETYCONFIGURATIONLIST = _descriptor.Descriptor(
  name='SafetyConfigurationList',
  full_name='Kinova.Api.DeviceConfig.SafetyConfigurationList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='configuration', full_name='Kinova.Api.DeviceConfig.SafetyConfigurationList.configuration', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1540,
  serialized_end=1634,
)


_SAFETYSTATUS = _descriptor.Descriptor(
  name='SafetyStatus',
  full_name='Kinova.Api.DeviceConfig.SafetyStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='Kinova.Api.DeviceConfig.SafetyStatus.value', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1636,
  serialized_end=1703,
)


_CALIBRATIONPARAMETER = _descriptor.Descriptor(
  name='CalibrationParameter',
  full_name='Kinova.Api.DeviceConfig.CalibrationParameter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='calibration_parameter_identifier', full_name='Kinova.Api.DeviceConfig.CalibrationParameter.calibration_parameter_identifier', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signedIntValue', full_name='Kinova.Api.DeviceConfig.CalibrationParameter.signedIntValue', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unsignedIntValue', full_name='Kinova.Api.DeviceConfig.CalibrationParameter.unsignedIntValue', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='floatValue', full_name='Kinova.Api.DeviceConfig.CalibrationParameter.floatValue', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='Kinova.Api.DeviceConfig.CalibrationParameter.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1706,
  serialized_end=1855,
)


_CALIBRATION = _descriptor.Descriptor(
  name='Calibration',
  full_name='Kinova.Api.DeviceConfig.Calibration',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='calibration_item', full_name='Kinova.Api.DeviceConfig.Calibration.calibration_item', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='calibration_parameter', full_name='Kinova.Api.DeviceConfig.Calibration.calibration_parameter', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1858,
  serialized_end=2017,
)


_CALIBRATIONELEMENT = _descriptor.Descriptor(
  name='CalibrationElement',
  full_name='Kinova.Api.DeviceConfig.CalibrationElement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='calibration_item', full_name='Kinova.Api.DeviceConfig.CalibrationElement.calibration_item', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2019,
  serialized_end=2107,
)


_CALIBRATIONRESULT = _descriptor.Descriptor(
  name='CalibrationResult',
  full_name='Kinova.Api.DeviceConfig.CalibrationResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='calibration_status', full_name='Kinova.Api.DeviceConfig.CalibrationResult.calibration_status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='calibration_details', full_name='Kinova.Api.DeviceConfig.CalibrationResult.calibration_details', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2109,
  serialized_end=2229,
)


_CAPSENSECONFIG = _descriptor.Descriptor(
  name='CapSenseConfig',
  full_name='Kinova.Api.DeviceConfig.CapSenseConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mode', full_name='Kinova.Api.DeviceConfig.CapSenseConfig.mode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='threshold_a', full_name='Kinova.Api.DeviceConfig.CapSenseConfig.threshold_a', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='threshold_b', full_name='Kinova.Api.DeviceConfig.CapSenseConfig.threshold_b', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2231,
  serialized_end=2342,
)


_CAPSENSEREGISTER = _descriptor.Descriptor(
  name='CapSenseRegister',
  full_name='Kinova.Api.DeviceConfig.CapSenseRegister',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='address', full_name='Kinova.Api.DeviceConfig.CapSenseRegister.address', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='Kinova.Api.DeviceConfig.CapSenseRegister.value', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2344,
  serialized_end=2394,
)

_DEVICETYPE.fields_by_name['device_type'].enum_type = Common__pb2._DEVICETYPES
_RUNMODE.fields_by_name['run_mode'].enum_type = _RUNMODES
_SAFETYINFORMATION.fields_by_name['handle'].message_type = Common__pb2._SAFETYHANDLE
_SAFETYINFORMATION.fields_by_name['limit_type'].enum_type = _SAFETYLIMITTYPE
_SAFETYINFORMATION.fields_by_name['status'].enum_type = Common__pb2._SAFETYSTATUSVALUE
_SAFETYINFORMATION.fields_by_name['unit'].enum_type = Common__pb2._UNIT
_SAFETYINFORMATIONLIST.fields_by_name['information'].message_type = _SAFETYINFORMATION
_SAFETYENABLE.fields_by_name['handle'].message_type = Common__pb2._SAFETYHANDLE
_SAFETYTHRESHOLD.fields_by_name['handle'].message_type = Common__pb2._SAFETYHANDLE
_SAFETYCONFIGURATION.fields_by_name['handle'].message_type = Common__pb2._SAFETYHANDLE
_SAFETYCONFIGURATION.fields_by_name['enable'].message_type = _SAFETYENABLE
_SAFETYCONFIGURATIONLIST.fields_by_name['configuration'].message_type = _SAFETYCONFIGURATION
_SAFETYSTATUS.fields_by_name['value'].enum_type = Common__pb2._SAFETYSTATUSVALUE
_CALIBRATIONPARAMETER.oneofs_by_name['value'].fields.append(
  _CALIBRATIONPARAMETER.fields_by_name['signedIntValue'])
_CALIBRATIONPARAMETER.fields_by_name['signedIntValue'].containing_oneof = _CALIBRATIONPARAMETER.oneofs_by_name['value']
_CALIBRATIONPARAMETER.oneofs_by_name['value'].fields.append(
  _CALIBRATIONPARAMETER.fields_by_name['unsignedIntValue'])
_CALIBRATIONPARAMETER.fields_by_name['unsignedIntValue'].containing_oneof = _CALIBRATIONPARAMETER.oneofs_by_name['value']
_CALIBRATIONPARAMETER.oneofs_by_name['value'].fields.append(
  _CALIBRATIONPARAMETER.fields_by_name['floatValue'])
_CALIBRATIONPARAMETER.fields_by_name['floatValue'].containing_oneof = _CALIBRATIONPARAMETER.oneofs_by_name['value']
_CALIBRATION.fields_by_name['calibration_item'].enum_type = _CALIBRATIONITEM
_CALIBRATION.fields_by_name['calibration_parameter'].message_type = _CALIBRATIONPARAMETER
_CALIBRATIONELEMENT.fields_by_name['calibration_item'].enum_type = _CALIBRATIONITEM
_CALIBRATIONRESULT.fields_by_name['calibration_status'].enum_type = _CALIBRATIONSTATUS
_CAPSENSECONFIG.fields_by_name['mode'].enum_type = _CAPSENSEMODE
DESCRIPTOR.message_types_by_name['DeviceType'] = _DEVICETYPE
DESCRIPTOR.message_types_by_name['RunMode'] = _RUNMODE
DESCRIPTOR.message_types_by_name['FirmwareVersion'] = _FIRMWAREVERSION
DESCRIPTOR.message_types_by_name['BootloaderVersion'] = _BOOTLOADERVERSION
DESCRIPTOR.message_types_by_name['ModelNumber'] = _MODELNUMBER
DESCRIPTOR.message_types_by_name['PartNumber'] = _PARTNUMBER
DESCRIPTOR.message_types_by_name['SerialNumber'] = _SERIALNUMBER
DESCRIPTOR.message_types_by_name['MACAddress'] = _MACADDRESS
DESCRIPTOR.message_types_by_name['IPv4Settings'] = _IPV4SETTINGS
DESCRIPTOR.message_types_by_name['PartNumberRevision'] = _PARTNUMBERREVISION
DESCRIPTOR.message_types_by_name['PowerOnSelfTestResult'] = _POWERONSELFTESTRESULT
DESCRIPTOR.message_types_by_name['RebootRqst'] = _REBOOTRQST
DESCRIPTOR.message_types_by_name['SafetyInformation'] = _SAFETYINFORMATION
DESCRIPTOR.message_types_by_name['SafetyInformationList'] = _SAFETYINFORMATIONLIST
DESCRIPTOR.message_types_by_name['SafetyEnable'] = _SAFETYENABLE
DESCRIPTOR.message_types_by_name['SafetyThreshold'] = _SAFETYTHRESHOLD
DESCRIPTOR.message_types_by_name['SafetyConfiguration'] = _SAFETYCONFIGURATION
DESCRIPTOR.message_types_by_name['SafetyConfigurationList'] = _SAFETYCONFIGURATIONLIST
DESCRIPTOR.message_types_by_name['SafetyStatus'] = _SAFETYSTATUS
DESCRIPTOR.message_types_by_name['CalibrationParameter'] = _CALIBRATIONPARAMETER
DESCRIPTOR.message_types_by_name['Calibration'] = _CALIBRATION
DESCRIPTOR.message_types_by_name['CalibrationElement'] = _CALIBRATIONELEMENT
DESCRIPTOR.message_types_by_name['CalibrationResult'] = _CALIBRATIONRESULT
DESCRIPTOR.message_types_by_name['CapSenseConfig'] = _CAPSENSECONFIG
DESCRIPTOR.message_types_by_name['CapSenseRegister'] = _CAPSENSEREGISTER
DESCRIPTOR.enum_types_by_name['ServiceVersion'] = _SERVICEVERSION
DESCRIPTOR.enum_types_by_name['RunModes'] = _RUNMODES
DESCRIPTOR.enum_types_by_name['CalibrationItem'] = _CALIBRATIONITEM
DESCRIPTOR.enum_types_by_name['CalibrationStatus'] = _CALIBRATIONSTATUS
DESCRIPTOR.enum_types_by_name['SafetyLimitType'] = _SAFETYLIMITTYPE
DESCRIPTOR.enum_types_by_name['CapSenseMode'] = _CAPSENSEMODE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DeviceType = _reflection.GeneratedProtocolMessageType('DeviceType', (_message.Message,), dict(
  DESCRIPTOR = _DEVICETYPE,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.DeviceType)
  ))
_sym_db.RegisterMessage(DeviceType)

RunMode = _reflection.GeneratedProtocolMessageType('RunMode', (_message.Message,), dict(
  DESCRIPTOR = _RUNMODE,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.RunMode)
  ))
_sym_db.RegisterMessage(RunMode)

FirmwareVersion = _reflection.GeneratedProtocolMessageType('FirmwareVersion', (_message.Message,), dict(
  DESCRIPTOR = _FIRMWAREVERSION,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.FirmwareVersion)
  ))
_sym_db.RegisterMessage(FirmwareVersion)

BootloaderVersion = _reflection.GeneratedProtocolMessageType('BootloaderVersion', (_message.Message,), dict(
  DESCRIPTOR = _BOOTLOADERVERSION,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.BootloaderVersion)
  ))
_sym_db.RegisterMessage(BootloaderVersion)

ModelNumber = _reflection.GeneratedProtocolMessageType('ModelNumber', (_message.Message,), dict(
  DESCRIPTOR = _MODELNUMBER,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.ModelNumber)
  ))
_sym_db.RegisterMessage(ModelNumber)

PartNumber = _reflection.GeneratedProtocolMessageType('PartNumber', (_message.Message,), dict(
  DESCRIPTOR = _PARTNUMBER,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.PartNumber)
  ))
_sym_db.RegisterMessage(PartNumber)

SerialNumber = _reflection.GeneratedProtocolMessageType('SerialNumber', (_message.Message,), dict(
  DESCRIPTOR = _SERIALNUMBER,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.SerialNumber)
  ))
_sym_db.RegisterMessage(SerialNumber)

MACAddress = _reflection.GeneratedProtocolMessageType('MACAddress', (_message.Message,), dict(
  DESCRIPTOR = _MACADDRESS,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.MACAddress)
  ))
_sym_db.RegisterMessage(MACAddress)

IPv4Settings = _reflection.GeneratedProtocolMessageType('IPv4Settings', (_message.Message,), dict(
  DESCRIPTOR = _IPV4SETTINGS,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.IPv4Settings)
  ))
_sym_db.RegisterMessage(IPv4Settings)

PartNumberRevision = _reflection.GeneratedProtocolMessageType('PartNumberRevision', (_message.Message,), dict(
  DESCRIPTOR = _PARTNUMBERREVISION,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.PartNumberRevision)
  ))
_sym_db.RegisterMessage(PartNumberRevision)

PowerOnSelfTestResult = _reflection.GeneratedProtocolMessageType('PowerOnSelfTestResult', (_message.Message,), dict(
  DESCRIPTOR = _POWERONSELFTESTRESULT,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.PowerOnSelfTestResult)
  ))
_sym_db.RegisterMessage(PowerOnSelfTestResult)

RebootRqst = _reflection.GeneratedProtocolMessageType('RebootRqst', (_message.Message,), dict(
  DESCRIPTOR = _REBOOTRQST,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.RebootRqst)
  ))
_sym_db.RegisterMessage(RebootRqst)

SafetyInformation = _reflection.GeneratedProtocolMessageType('SafetyInformation', (_message.Message,), dict(
  DESCRIPTOR = _SAFETYINFORMATION,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.SafetyInformation)
  ))
_sym_db.RegisterMessage(SafetyInformation)

SafetyInformationList = _reflection.GeneratedProtocolMessageType('SafetyInformationList', (_message.Message,), dict(
  DESCRIPTOR = _SAFETYINFORMATIONLIST,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.SafetyInformationList)
  ))
_sym_db.RegisterMessage(SafetyInformationList)

SafetyEnable = _reflection.GeneratedProtocolMessageType('SafetyEnable', (_message.Message,), dict(
  DESCRIPTOR = _SAFETYENABLE,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.SafetyEnable)
  ))
_sym_db.RegisterMessage(SafetyEnable)

SafetyThreshold = _reflection.GeneratedProtocolMessageType('SafetyThreshold', (_message.Message,), dict(
  DESCRIPTOR = _SAFETYTHRESHOLD,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.SafetyThreshold)
  ))
_sym_db.RegisterMessage(SafetyThreshold)

SafetyConfiguration = _reflection.GeneratedProtocolMessageType('SafetyConfiguration', (_message.Message,), dict(
  DESCRIPTOR = _SAFETYCONFIGURATION,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.SafetyConfiguration)
  ))
_sym_db.RegisterMessage(SafetyConfiguration)

SafetyConfigurationList = _reflection.GeneratedProtocolMessageType('SafetyConfigurationList', (_message.Message,), dict(
  DESCRIPTOR = _SAFETYCONFIGURATIONLIST,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.SafetyConfigurationList)
  ))
_sym_db.RegisterMessage(SafetyConfigurationList)

SafetyStatus = _reflection.GeneratedProtocolMessageType('SafetyStatus', (_message.Message,), dict(
  DESCRIPTOR = _SAFETYSTATUS,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.SafetyStatus)
  ))
_sym_db.RegisterMessage(SafetyStatus)

CalibrationParameter = _reflection.GeneratedProtocolMessageType('CalibrationParameter', (_message.Message,), dict(
  DESCRIPTOR = _CALIBRATIONPARAMETER,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.CalibrationParameter)
  ))
_sym_db.RegisterMessage(CalibrationParameter)

Calibration = _reflection.GeneratedProtocolMessageType('Calibration', (_message.Message,), dict(
  DESCRIPTOR = _CALIBRATION,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.Calibration)
  ))
_sym_db.RegisterMessage(Calibration)

CalibrationElement = _reflection.GeneratedProtocolMessageType('CalibrationElement', (_message.Message,), dict(
  DESCRIPTOR = _CALIBRATIONELEMENT,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.CalibrationElement)
  ))
_sym_db.RegisterMessage(CalibrationElement)

CalibrationResult = _reflection.GeneratedProtocolMessageType('CalibrationResult', (_message.Message,), dict(
  DESCRIPTOR = _CALIBRATIONRESULT,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.CalibrationResult)
  ))
_sym_db.RegisterMessage(CalibrationResult)

CapSenseConfig = _reflection.GeneratedProtocolMessageType('CapSenseConfig', (_message.Message,), dict(
  DESCRIPTOR = _CAPSENSECONFIG,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.CapSenseConfig)
  ))
_sym_db.RegisterMessage(CapSenseConfig)

CapSenseRegister = _reflection.GeneratedProtocolMessageType('CapSenseRegister', (_message.Message,), dict(
  DESCRIPTOR = _CAPSENSEREGISTER,
  __module__ = 'DeviceConfig_pb2'
  # @@protoc_insertion_point(class_scope:Kinova.Api.DeviceConfig.CapSenseRegister)
  ))
_sym_db.RegisterMessage(CapSenseRegister)



_DEVICECONFIG = _descriptor.ServiceDescriptor(
  name='DeviceConfig',
  full_name='Kinova.Api.DeviceConfig.DeviceConfig',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=3033,
  serialized_end=6102,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetRunMode',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetRunMode',
    index=0,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_RUNMODE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetRunMode',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.SetRunMode',
    index=1,
    containing_service=None,
    input_type=_RUNMODE,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetDeviceType',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetDeviceType',
    index=2,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_DEVICETYPE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetFirmwareVersion',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetFirmwareVersion',
    index=3,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_FIRMWAREVERSION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetBootloaderVersion',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetBootloaderVersion',
    index=4,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_BOOTLOADERVERSION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetModelNumber',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetModelNumber',
    index=5,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_MODELNUMBER,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetPartNumber',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetPartNumber',
    index=6,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_PARTNUMBER,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetSerialNumber',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetSerialNumber',
    index=7,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_SERIALNUMBER,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetMACAddress',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetMACAddress',
    index=8,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_MACADDRESS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetIPv4Settings',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetIPv4Settings',
    index=9,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_IPV4SETTINGS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetIPv4Settings',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.SetIPv4Settings',
    index=10,
    containing_service=None,
    input_type=_IPV4SETTINGS,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetPartNumberRevision',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetPartNumberRevision',
    index=11,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_PARTNUMBERREVISION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RebootRequest',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.RebootRequest',
    index=12,
    containing_service=None,
    input_type=_REBOOTRQST,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetSafetyEnable',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.SetSafetyEnable',
    index=13,
    containing_service=None,
    input_type=_SAFETYENABLE,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetSafetyErrorThreshold',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.SetSafetyErrorThreshold',
    index=14,
    containing_service=None,
    input_type=_SAFETYTHRESHOLD,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetSafetyWarningThreshold',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.SetSafetyWarningThreshold',
    index=15,
    containing_service=None,
    input_type=_SAFETYTHRESHOLD,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetSafetyConfiguration',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.SetSafetyConfiguration',
    index=16,
    containing_service=None,
    input_type=_SAFETYCONFIGURATION,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetSafetyConfiguration',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetSafetyConfiguration',
    index=17,
    containing_service=None,
    input_type=Common__pb2._SAFETYHANDLE,
    output_type=_SAFETYCONFIGURATION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetSafetyInformation',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetSafetyInformation',
    index=18,
    containing_service=None,
    input_type=Common__pb2._SAFETYHANDLE,
    output_type=_SAFETYINFORMATION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetSafetyEnable',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetSafetyEnable',
    index=19,
    containing_service=None,
    input_type=Common__pb2._SAFETYHANDLE,
    output_type=_SAFETYENABLE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetSafetyStatus',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetSafetyStatus',
    index=20,
    containing_service=None,
    input_type=Common__pb2._SAFETYHANDLE,
    output_type=_SAFETYSTATUS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ClearAllSafetyStatus',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.ClearAllSafetyStatus',
    index=21,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ClearSafetyStatus',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.ClearSafetyStatus',
    index=22,
    containing_service=None,
    input_type=Common__pb2._SAFETYHANDLE,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAllSafetyConfiguration',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetAllSafetyConfiguration',
    index=23,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_SAFETYCONFIGURATIONLIST,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetAllSafetyInformation',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetAllSafetyInformation',
    index=24,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_SAFETYINFORMATIONLIST,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ResetSafetyDefaults',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.ResetSafetyDefaults',
    index=25,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SafetyTopic',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.SafetyTopic',
    index=26,
    containing_service=None,
    input_type=Common__pb2._NOTIFICATIONOPTIONS,
    output_type=Common__pb2._NOTIFICATIONHANDLE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ExecuteCalibration',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.ExecuteCalibration',
    index=27,
    containing_service=None,
    input_type=_CALIBRATION,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCalibrationResult',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetCalibrationResult',
    index=28,
    containing_service=None,
    input_type=_CALIBRATIONELEMENT,
    output_type=_CALIBRATIONRESULT,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StopCalibration',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.StopCalibration',
    index=29,
    containing_service=None,
    input_type=_CALIBRATION,
    output_type=_CALIBRATIONRESULT,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetCapSenseConfig',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.SetCapSenseConfig',
    index=30,
    containing_service=None,
    input_type=_CAPSENSECONFIG,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCapSenseConfig',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.GetCapSenseConfig',
    index=31,
    containing_service=None,
    input_type=Common__pb2._EMPTY,
    output_type=_CAPSENSECONFIG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ReadCapSenseRegister',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.ReadCapSenseRegister',
    index=32,
    containing_service=None,
    input_type=_CAPSENSEREGISTER,
    output_type=_CAPSENSEREGISTER,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='WriteCapSenseRegister',
    full_name='Kinova.Api.DeviceConfig.DeviceConfig.WriteCapSenseRegister',
    index=33,
    containing_service=None,
    input_type=_CAPSENSEREGISTER,
    output_type=Common__pb2._EMPTY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_DEVICECONFIG)

DESCRIPTOR.services_by_name['DeviceConfig'] = _DEVICECONFIG

# @@protoc_insertion_point(module_scope)
